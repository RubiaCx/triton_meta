#loc = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":120:0)
module {
  tt.func public @matmul_persistent_tma_ws_cooperative_kernel(%arg0: !tt.ptr<i8, 0> {tt.nv_tma_desc = 1 : i32} loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":120:0), %arg1: !tt.ptr<i8, 0> {tt.nv_tma_desc = 1 : i32} loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":120:0), %arg2: !tt.ptr<i8, 0> {tt.nv_tma_desc = 1 : i32} loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":120:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":120:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":120:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":120:0)) attributes {noinline = false} {
    %c127_i32 = arith.constant 127 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<64x64xf32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c63_i32 = arith.constant 63 : i32 loc(#loc1)
    %0 = arith.addi %arg3, %c63_i32 : i32 loc(#loc31)
    %1 = arith.divsi %0, %c64_i32 : i32 loc(#loc32)
    %2 = arith.addi %arg4, %c63_i32 : i32 loc(#loc33)
    %3 = arith.divsi %2, %c64_i32 : i32 loc(#loc34)
    %4 = arith.muli %1, %3 : i32 loc(#loc6)
    %5 = tt.get_program_id x : i32 loc(#loc7)
    %6 = tt.get_num_programs x : i32 loc(#loc8)
    %7 = arith.muli %3, %c8_i32 : i32 loc(#loc9)
    %8 = arith.addi %arg5, %c127_i32 : i32 loc(#loc35)
    %9 = arith.divsi %8, %c128_i32 : i32 loc(#loc36)
    scf.for %arg6 = %5 to %4 step %6  : i32 {
      %10 = arith.divsi %arg6, %7 : i32 loc(#loc12)
      %11 = arith.muli %10, %c8_i32 : i32 loc(#loc13)
      %12 = arith.subi %1, %11 : i32 loc(#loc14)
      %13 = arith.minsi %12, %c8_i32 : i32 loc(#loc15)
      %14 = arith.remsi %arg6, %7 : i32 loc(#loc16)
      %15 = arith.remsi %14, %13 : i32 loc(#loc17)
      %16 = arith.addi %11, %15 : i32 loc(#loc18)
      %17 = arith.divsi %14, %13 : i32 loc(#loc19)
      %18 = arith.muli %16, %c64_i32 : i32 loc(#loc20)
      %19 = arith.muli %17, %c64_i32 : i32 loc(#loc21)
      %20:2 = scf.for %arg7 = %c0_i32 to %9 step %c1_i32 iter_args(%arg8 = %cst, %arg9 = %c0_i32) -> (tensor<64x64xf32>, i32)  : i32 {
        %22 = tt.experimental_descriptor_load %arg0[%18, %arg9] {async_task_id = dense<0> : vector<1xi32>} : !tt.ptr<i8, 0> -> tensor<64x128xf16> loc(#loc23)
        %23 = tt.experimental_descriptor_load %arg1[%arg9, %19] {async_task_id = dense<0> : vector<1xi32>} : !tt.ptr<i8, 0> -> tensor<128x64xf16> loc(#loc24)
        %24 = tt.dot %22, %23, %arg8, inputPrecision = tf32 : tensor<64x128xf16> * tensor<128x64xf16> -> tensor<64x64xf32> loc(#loc25)
        %25 = arith.addi %arg9, %c128_i32 : i32 loc(#loc26)
        scf.yield %24, %25 : tensor<64x64xf32>, i32 loc(#loc27)
      } loc(#loc22)
      %21 = arith.truncf %20#0 : tensor<64x64xf32> to tensor<64x64xf16> loc(#loc28)
      tt.experimental_descriptor_store %arg2[%18, %19], %21 {async_task_id = dense<1> : vector<2xi32>} : !tt.ptr<i8, 0>, tensor<64x64xf16> loc(#loc29)
    } loc(#loc11)
    tt.return loc(#loc30)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/hoy/triton-fb/python/triton/language/standard.py":40:22)
#loc3 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":137:27)
#loc4 = loc("/home/hoy/triton-fb/python/triton/language/standard.py":40:28)
#loc5 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":137:54)
#loc6 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":137:43)
#loc7 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":138:35)
#loc8 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":138:66)
#loc9 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":141:42)
#loc10 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":160:37)
#loc11 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":138:50)
#loc12 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":142:26)
#loc13 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":143:33)
#loc14 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":144:39)
#loc15 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":144:52)
#loc16 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":145:38)
#loc17 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":145:58)
#loc18 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":145:31)
#loc19 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":146:44)
#loc20 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":155:26)
#loc21 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":156:26)
#loc22 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":160:26)
#loc23 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":166:20)
#loc24 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":169:76)
#loc25 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":172:37)
#loc26 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":173:22)
#loc27 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":173:12)
#loc28 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":175:27)
#loc29 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":178:56)
#loc30 = loc("/home/hoy/triton-fb/python/tutorials/10-warp-specialized-matmul.py":138:4)
#loc31 = loc(callsite(#loc2 at #loc3))
#loc32 = loc(callsite(#loc4 at #loc3))
#loc33 = loc(callsite(#loc2 at #loc5))
#loc34 = loc(callsite(#loc4 at #loc5))
#loc35 = loc(callsite(#loc2 at #loc10))
#loc36 = loc(callsite(#loc4 at #loc10))
