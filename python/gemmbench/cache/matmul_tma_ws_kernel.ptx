//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	matmul_tma_ws_kernel    // -- Begin function matmul_tma_ws_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @matmul_tma_ws_kernel
.visible .entry matmul_tma_ws_kernel(
	.param .align 64 .b8 matmul_tma_ws_kernel_param_0[128],
	.param .align 64 .b8 matmul_tma_ws_kernel_param_1[128],
	.param .align 64 .b8 matmul_tma_ws_kernel_param_2[128],
	.param .u32 matmul_tma_ws_kernel_param_3,
	.param .u32 matmul_tma_ws_kernel_param_4,
	.param .u32 matmul_tma_ws_kernel_param_5,
	.param .u32 matmul_tma_ws_kernel_param_6,
	.param .u32 matmul_tma_ws_kernel_param_7,
	.param .u32 matmul_tma_ws_kernel_param_8,
	.param .u64 .ptr .global .align 1 matmul_tma_ws_kernel_param_9
)
.reqntid 256
{
	.reg .pred 	%p<36>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<318>;
	.reg .f32 	%f<2191>;
	.reg .b64 	%rd<50>;
$L__func_begin0:

// %bb.0:
	.loc	1 17 0                          // matmul_tma_ws.py:17
	mov.u32 	%r1, %tid.x;
	shr.u32 	%r2, %r1, 5;
	shfl.sync.idx.b32	%r3, %r2, 0, 31, -1;
	setp.lt.u32 	%p1, %r3, 4;
	@%p1 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_1;
$L__BB0_9:
	.loc	1 0 0                           // matmul_tma_ws.py:0:0
	ld.param.u32 	%r62, [matmul_tma_ws_kernel_param_5];
	ld.param.u32 	%r61, [matmul_tma_ws_kernel_param_4];
	ld.param.u32 	%r60, [matmul_tma_ws_kernel_param_3];
	mov.b64 	%rd12, matmul_tma_ws_kernel_param_2;
	mov.u64 	%rd13, %rd12;
	.loc	1 17 0                          // matmul_tma_ws.py:17
	cvta.param.u64 	%rd1, %rd13;
	setp.eq.s32 	%p18, %r1, 0;
	mov.u32 	%r315, global_smem;
	add.s32 	%r250, %r315, 131168;
	// begin inline asm
	@%p18 mbarrier.init.shared::cta.b64 [%r250], 1;
	// end inline asm
	// begin inline asm
	barrier.sync.aligned 0, 128 ;
	// end inline asm
	add.s32 	%r251, %r315, 131176;
	// begin inline asm
	@%p18 mbarrier.init.shared::cta.b64 [%r251], 1;
	// end inline asm
	// begin inline asm
	barrier.sync.aligned 0, 128 ;
	// end inline asm
	add.s32 	%r252, %r315, 131184;
	// begin inline asm
	@%p18 mbarrier.init.shared::cta.b64 [%r252], 1;
	// end inline asm
	add.s32 	%r253, %r315, 131072;
	// begin inline asm
	@%p18 mbarrier.init.shared::cta.b64 [%r253], 1;
	// end inline asm
	add.s32 	%r254, %r315, 131200;
	// begin inline asm
	@%p18 mbarrier.init.shared::cta.b64 [%r254], 128;
	// end inline asm
	// begin inline asm
	barrier.sync.aligned 0, 128 ;
	// end inline asm
	add.s32 	%r255, %r315, 131080;
	// begin inline asm
	@%p18 mbarrier.init.shared::cta.b64 [%r255], 1;
	// end inline asm
	add.s32 	%r256, %r315, 131208;
	// begin inline asm
	@%p18 mbarrier.init.shared::cta.b64 [%r256], 128;
	// end inline asm
	// begin inline asm
	barrier.sync.aligned 0, 128 ;
	// end inline asm
	add.s32 	%r257, %r315, 131088;
	// begin inline asm
	@%p18 mbarrier.init.shared::cta.b64 [%r257], 1;
	// end inline asm
	add.s32 	%r258, %r315, 131216;
	// begin inline asm
	@%p18 mbarrier.init.shared::cta.b64 [%r258], 128;
	// end inline asm
	// begin inline asm
	barrier.sync.aligned 0, 128 ;
	// end inline asm
	st.shared.v4.u32 	[global_smem+131072], {%r60, %r61, %r62, %r250};
	mov.b32 	%r317, 0;
	st.shared.u32 	[global_smem+131088], %r317;
	st.shared.u32 	[global_smem+131100], %r315;
	st.shared.v2.u32 	[global_smem+131104], {%r317, %r317};
	st.shared.u32 	[global_smem+131112], %r317;
	add.s32 	%r261, %r315, 49152;
	st.shared.u32 	[global_smem+131124], %r261;
	st.shared.v2.u32 	[global_smem+131128], {%r317, %r317};
	st.shared.u32 	[global_smem+131136], %r317;
	shr.u64 	%rd42, %rd1, 32;
	st.shared.u32 	[global_smem+131152], %rd42;
	st.shared.u32 	[global_smem+131148], %rd1;
	st.shared.u32 	[global_smem+131156], %r254;
	st.shared.u32 	[global_smem+131160], %r317;
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
$L__tmp0:
	.loc	2 40 22                         // standard.py:40:22 @[ matmul_tma_ws.py:55:33 ]
	add.s32 	%r53, %r62, 63;
$L__tmp1:
	.loc	1 55 22                         // matmul_tma_ws.py:55:22
	setp.lt.s32 	%p27, %r53, 64;
	@%p27 bra 	$L__BB0_12;
// %bb.10:                              // %.lr.ph16
	.loc	1 0 22                          // matmul_tma_ws.py:0:22
	mov.b64 	%rd11, matmul_tma_ws_kernel_param_0;
	mov.b64 	%rd14, matmul_tma_ws_kernel_param_1;
	mov.u64 	%rd15, %rd14;
	cvta.param.u64 	%rd45, %rd15;
	mov.u64 	%rd16, %rd11;
	cvta.param.u64 	%rd44, %rd16;
	mov.u32 	%r262, %ctaid.x;
	add.s32 	%r263, %r60, 127;
	shr.s32 	%r264, %r263, 31;
	shr.u32 	%r265, %r264, 25;
	add.s32 	%r266, %r263, %r265;
	shr.s32 	%r267, %r266, 7;
	add.s32 	%r268, %r61, 127;
	shr.s32 	%r269, %r268, 31;
	shr.u32 	%r270, %r269, 25;
	add.s32 	%r271, %r268, %r270;
	shr.s32 	%r272, %r271, 7;
	shl.b32 	%r273, %r272, 3;
	div.s32 	%r274, %r262, %r273;
	shl.b32 	%r275, %r274, 3;
	sub.s32 	%r276, %r267, %r275;
	min.s32 	%r278, %r276, 8;
	mul.lo.s32 	%r279, %r274, %r273;
	sub.s32 	%r280, %r262, %r279;
	div.s32 	%r281, %r280, %r278;
	mul.lo.s32 	%r282, %r281, %r278;
	sub.s32 	%r283, %r280, %r282;
	add.s32 	%r284, %r283, %r275;
	shl.b32 	%r293, %r284, 7;
	shl.b32 	%r52, %r281, 7;
$L__tmp2:
	.loc	2 40 28                         // standard.py:40:28 @[ matmul_tma_ws.py:55:33 ]
	shr.u32 	%r287, %r53, 6;
$L__tmp3:
	.loc	1 55 22                         // matmul_tma_ws.py:55:22
	cvt.u64.u32 	%rd8, %r287;
	mov.b64 	%rd49, 0;
	mov.u32 	%r316, %r315;
$L__BB0_11:                             // =>This Inner Loop Header: Depth=1
	.loc	1 0 22                          // matmul_tma_ws.py:0:22
	setp.lt.u32 	%p31, %r1, 64;
	setp.lt.u32 	%p32, %r1, 32;
	.loc	1 58 77                         // matmul_tma_ws.py:58:77
	mul.hi.u64 	%rd46, %rd49, -6148914691236517205;
	shr.u64 	%rd47, %rd46, 1;
	cvt.u32.u64 	%r299, %rd47;
	not.b32 	%r300, %r299;
	mad.lo.s32 	%r291, %r299, -49152, %r316;
	mad.lo.s32 	%r301, %r299, -24, %r315;
	add.s32 	%r288, %r301, 131200;
	and.b32  	%r289, %r300, 1;
	// begin inline asm
	{                                                           
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r288], %r289;           
	@!P1 bra.uni waitLoop;                                      
	}                                                           
	
	// end inline asm
	.loc	1 17 0                          // matmul_tma_ws.py:17
	add.s32 	%r290, %r301, 131168;
	// begin inline asm
	bar.sync 0x1, 0x80;
	// end inline asm
	// begin inline asm
	@%p18 mbarrier.arrive.expect_tx.shared.b64 _, [%r290], 32768;
	// end inline asm
	// begin inline asm
	bar.sync 0x1, 0x80;
	// end inline asm
	elect.sync 	%r302|%p33, -1;
	and.pred  	%p29, %p32, %p33;
	// begin inline asm
	@%p29 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r291], [%rd44, {%r317, %r293}], [%r290];
	// end inline asm
	// begin inline asm
	bar.sync 0x1, 0x80;
	// end inline asm
	shfl.sync.idx.b32	%r303, %r2, 0, 31, -1;
	elect.sync 	%r304|%p34, -1;
	and.pred  	%p30, %p31, %p34;
	shl.b32 	%r305, %r303, 13;
	add.s32 	%r306, %r291, %r305;
	add.s32 	%r295, %r306, 49152;
	shl.b32 	%r307, %r303, 6;
	add.s32 	%r296, %r307, %r52;
	// begin inline asm
	@%p30 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r295], [%rd45, {%r296, %r317}], [%r290];
	// end inline asm
	.loc	1 66 18                         // matmul_tma_ws.py:66:18
	add.s32 	%r317, %r317, 64;
	.loc	1 55 22                         // matmul_tma_ws.py:55:22
	add.s64 	%rd49, %rd49, 1;
	add.s32 	%r316, %r316, 16384;
	add.s32 	%r315, %r315, 8;
	setp.ne.s64 	%p35, %rd8, %rd49;
	@%p35 bra 	$L__BB0_11;
$L__BB0_12:                             // %._crit_edge17
	.loc	1 17 0                          // matmul_tma_ws.py:17
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
	mov.b32 	%r308, 16843009;
	.loc	1 75 4                          // matmul_tma_ws.py:75:4
	st.shared.u32 	[global_smem+131156], %r308;
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
$L__BB0_13:                             // %common.ret
	.loc	1 0 0                           // matmul_tma_ws.py:0
	ret;
$L__BB0_1:                              // %.preheader
	mov.u32 	%r63, global_smem;
	add.s32 	%r64, %r63, %r3;
	add.s32 	%r4, %r64, 131156;
	mov.u32 	%r5, %ctaid.x;
	add.s32 	%r65, %r1, -128;
	shr.u32 	%r6, %r65, 5;
	and.b32  	%r66, %r1, 1;
	neg.s32 	%r67, %r66;
	and.b32  	%r68, %r67, 72;
	bfe.s32 	%r69, %r1, 1, 1;
	and.b32  	%r70, %r69, 144;
	bfe.s32 	%r71, %r1, 2, 1;
	and.b32  	%r72, %r71, 288;
	shl.b32 	%r73, %r1, 6;
	and.b32  	%r74, %r73, 512;
	or.b32  	%r75, %r70, %r74;
	or.b32  	%r76, %r75, %r68;
	or.b32  	%r77, %r76, %r72;
	shr.u32 	%r78, %r1, 1;
	and.b32  	%r79, %r78, 8;
	xor.b32  	%r80, %r77, %r79;
	shl.b32 	%r81, %r1, 5;
	and.b32  	%r82, %r81, 1024;
	or.b32  	%r83, %r80, %r82;
	and.b32  	%r84, %r81, 2048;
	or.b32  	%r85, %r83, %r84;
	shl.b32 	%r86, %r85, 1;
	add.s32 	%r87, %r63, 98304;
	add.s32 	%r160, %r87, %r86;
	xor.b32  	%r88, %r85, 16;
	shl.b32 	%r89, %r88, 1;
	add.s32 	%r165, %r87, %r89;
	xor.b32  	%r90, %r85, 32;
	shl.b32 	%r91, %r90, 1;
	add.s32 	%r170, %r87, %r91;
	xor.b32  	%r92, %r85, 48;
	shl.b32 	%r93, %r92, 1;
	add.s32 	%r175, %r87, %r93;
	xor.b32  	%r94, %r85, 8192;
	shl.b32 	%r95, %r94, 1;
	add.s32 	%r180, %r87, %r95;
	xor.b32  	%r96, %r85, 8208;
	shl.b32 	%r97, %r96, 1;
	add.s32 	%r185, %r87, %r97;
	xor.b32  	%r98, %r85, 8224;
	shl.b32 	%r99, %r98, 1;
	add.s32 	%r190, %r87, %r99;
	xor.b32  	%r100, %r85, 8240;
	shl.b32 	%r101, %r100, 1;
	add.s32 	%r195, %r87, %r101;
	xor.b32  	%r102, %r85, 4096;
	shl.b32 	%r103, %r102, 1;
	add.s32 	%r200, %r87, %r103;
	xor.b32  	%r104, %r85, 4112;
	shl.b32 	%r105, %r104, 1;
	add.s32 	%r205, %r87, %r105;
	xor.b32  	%r106, %r85, 4128;
	shl.b32 	%r107, %r106, 1;
	add.s32 	%r210, %r87, %r107;
	xor.b32  	%r108, %r85, 4144;
	shl.b32 	%r109, %r108, 1;
	add.s32 	%r215, %r87, %r109;
	xor.b32  	%r110, %r85, 12288;
	shl.b32 	%r111, %r110, 1;
	add.s32 	%r220, %r87, %r111;
	xor.b32  	%r112, %r85, 12304;
	shl.b32 	%r113, %r112, 1;
	add.s32 	%r225, %r87, %r113;
	xor.b32  	%r114, %r85, 12320;
	shl.b32 	%r115, %r114, 1;
	add.s32 	%r230, %r87, %r115;
	xor.b32  	%r116, %r85, 12336;
	shl.b32 	%r117, %r116, 1;
	add.s32 	%r235, %r87, %r117;
	and.b32  	%r23, %r1, -64;
	bra.uni 	$L__BB0_2;
$L__BB0_8:                              // %._crit_edge
                                        //   in Loop: Header=BB0_2 Depth=1
	shl.b64 	%rd18, %rd17, 32;
	or.b64  	%rd41, %rd18, %rd19;
	setp.eq.s32 	%p16, %r23, 256;
	.loc	1 55 22                         // matmul_tma_ws.py:55:22
	// begin inline asm
	// wait for regs: %f1935,%f1936,%f1937,%f1938,%f1939,%f1940,%f1941,%f1942,%f1943,%f1944,%f1945,%f1946,%f1947,%f1948,%f1949,%f1950,%f1951,%f1952,%f1953,%f1954,%f1955,%f1956,%f1957,%f1958,%f1959,%f1960,%f1961,%f1962,%f1963,%f1964,%f1965,%f1966,%f1967,%f1968,%f1969,%f1970,%f1971,%f1972,%f1973,%f1974,%f1975,%f1976,%f1977,%f1978,%f1979,%f1980,%f1981,%f1982,%f1983,%f1984,%f1985,%f1986,%f1987,%f1988,%f1989,%f1990,%f1991,%f1992,%f1993,%f1994,%f1995,%f1996,%f1997,%f1998,%f1999,%f2000,%f2001,%f2002,%f2003,%f2004,%f2005,%f2006,%f2007,%f2008,%f2009,%f2010,%f2011,%f2012,%f2013,%f2014,%f2015,%f2016,%f2017,%f2018,%f2019,%f2020,%f2021,%f2022,%f2023,%f2024,%f2025,%f2026,%f2027,%f2028,%f2029,%f2030,%f2031,%f2032,%f2033,%f2034,%f2035,%f2036,%f2037,%f2038,%f2039,%f2040,%f2041,%f2042,%f2043,%f2044,%f2045,%f2046,%f2047,%f2048,%f2049,%f2050,%f2051,%f2052,%f2053,%f2054,%f2055,%f2056,%f2057,%f2058,%f2059,%f2060,%f2061,%f2062
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 68 23                         // matmul_tma_ws.py:68:23
	cvt.rn.f16x2.f32 	%r161, %f1936, %f1935;
	cvt.rn.f16x2.f32 	%r162, %f1938, %f1937;
	cvt.rn.f16x2.f32 	%r163, %f1940, %f1939;
	cvt.rn.f16x2.f32 	%r164, %f1942, %f1941;
	cvt.rn.f16x2.f32 	%r166, %f1944, %f1943;
	cvt.rn.f16x2.f32 	%r167, %f1946, %f1945;
	cvt.rn.f16x2.f32 	%r168, %f1948, %f1947;
	cvt.rn.f16x2.f32 	%r169, %f1950, %f1949;
	cvt.rn.f16x2.f32 	%r171, %f1952, %f1951;
	cvt.rn.f16x2.f32 	%r172, %f1954, %f1953;
	cvt.rn.f16x2.f32 	%r173, %f1956, %f1955;
	cvt.rn.f16x2.f32 	%r174, %f1958, %f1957;
	cvt.rn.f16x2.f32 	%r176, %f1960, %f1959;
	cvt.rn.f16x2.f32 	%r177, %f1962, %f1961;
	cvt.rn.f16x2.f32 	%r178, %f1964, %f1963;
	cvt.rn.f16x2.f32 	%r179, %f1966, %f1965;
	cvt.rn.f16x2.f32 	%r181, %f1968, %f1967;
	cvt.rn.f16x2.f32 	%r182, %f1970, %f1969;
	cvt.rn.f16x2.f32 	%r183, %f1972, %f1971;
	cvt.rn.f16x2.f32 	%r184, %f1974, %f1973;
	cvt.rn.f16x2.f32 	%r186, %f1976, %f1975;
	cvt.rn.f16x2.f32 	%r187, %f1978, %f1977;
	cvt.rn.f16x2.f32 	%r188, %f1980, %f1979;
	cvt.rn.f16x2.f32 	%r189, %f1982, %f1981;
	cvt.rn.f16x2.f32 	%r191, %f1984, %f1983;
	cvt.rn.f16x2.f32 	%r192, %f1986, %f1985;
	cvt.rn.f16x2.f32 	%r193, %f1988, %f1987;
	cvt.rn.f16x2.f32 	%r194, %f1990, %f1989;
	cvt.rn.f16x2.f32 	%r196, %f1992, %f1991;
	cvt.rn.f16x2.f32 	%r197, %f1994, %f1993;
	cvt.rn.f16x2.f32 	%r198, %f1996, %f1995;
	cvt.rn.f16x2.f32 	%r199, %f1998, %f1997;
	cvt.rn.f16x2.f32 	%r201, %f2000, %f1999;
	cvt.rn.f16x2.f32 	%r202, %f2002, %f2001;
	cvt.rn.f16x2.f32 	%r203, %f2004, %f2003;
	cvt.rn.f16x2.f32 	%r204, %f2006, %f2005;
	cvt.rn.f16x2.f32 	%r206, %f2008, %f2007;
	cvt.rn.f16x2.f32 	%r207, %f2010, %f2009;
	cvt.rn.f16x2.f32 	%r208, %f2012, %f2011;
	cvt.rn.f16x2.f32 	%r209, %f2014, %f2013;
	cvt.rn.f16x2.f32 	%r211, %f2016, %f2015;
	cvt.rn.f16x2.f32 	%r212, %f2018, %f2017;
	cvt.rn.f16x2.f32 	%r213, %f2020, %f2019;
	cvt.rn.f16x2.f32 	%r214, %f2022, %f2021;
	cvt.rn.f16x2.f32 	%r216, %f2024, %f2023;
	cvt.rn.f16x2.f32 	%r217, %f2026, %f2025;
	cvt.rn.f16x2.f32 	%r218, %f2028, %f2027;
	cvt.rn.f16x2.f32 	%r219, %f2030, %f2029;
	cvt.rn.f16x2.f32 	%r221, %f2032, %f2031;
	cvt.rn.f16x2.f32 	%r222, %f2034, %f2033;
	cvt.rn.f16x2.f32 	%r223, %f2036, %f2035;
	cvt.rn.f16x2.f32 	%r224, %f2038, %f2037;
	cvt.rn.f16x2.f32 	%r226, %f2040, %f2039;
	cvt.rn.f16x2.f32 	%r227, %f2042, %f2041;
	cvt.rn.f16x2.f32 	%r228, %f2044, %f2043;
	cvt.rn.f16x2.f32 	%r229, %f2046, %f2045;
	cvt.rn.f16x2.f32 	%r231, %f2048, %f2047;
	cvt.rn.f16x2.f32 	%r232, %f2050, %f2049;
	cvt.rn.f16x2.f32 	%r233, %f2052, %f2051;
	cvt.rn.f16x2.f32 	%r234, %f2054, %f2053;
	cvt.rn.f16x2.f32 	%r236, %f2056, %f2055;
	cvt.rn.f16x2.f32 	%r237, %f2058, %f2057;
	cvt.rn.f16x2.f32 	%r238, %f2060, %f2059;
	cvt.rn.f16x2.f32 	%r239, %f2062, %f2061;
	.loc	1 76 57                         // matmul_tma_ws.py:76:57
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r160], {%r161, %r162, %r163, %r164};
	// end inline asm
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r165], {%r166, %r167, %r168, %r169};
	// end inline asm
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r170], {%r171, %r172, %r173, %r174};
	// end inline asm
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r175], {%r176, %r177, %r178, %r179};
	// end inline asm
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r180], {%r181, %r182, %r183, %r184};
	// end inline asm
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r185], {%r186, %r187, %r188, %r189};
	// end inline asm
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r190], {%r191, %r192, %r193, %r194};
	// end inline asm
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r195], {%r196, %r197, %r198, %r199};
	// end inline asm
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r200], {%r201, %r202, %r203, %r204};
	// end inline asm
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r205], {%r206, %r207, %r208, %r209};
	// end inline asm
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r210], {%r211, %r212, %r213, %r214};
	// end inline asm
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r215], {%r216, %r217, %r218, %r219};
	// end inline asm
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r220], {%r221, %r222, %r223, %r224};
	// end inline asm
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r225], {%r226, %r227, %r228, %r229};
	// end inline asm
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r230], {%r231, %r232, %r233, %r234};
	// end inline asm
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r235], {%r236, %r237, %r238, %r239};
	// end inline asm
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	// begin inline asm
	bar.sync 0x2, 0x80;
	// end inline asm
	elect.sync 	%r243|%p17, -1;
	shfl.sync.idx.b32	%r244, %r6, 0, 31, -1;
	add.s32 	%r245, %r244, -4;
	and.pred  	%p15, %p16, %p17;
	shl.b32 	%r246, %r245, 14;
	add.s32 	%r248, %r63, %r246;
	add.s32 	%r242, %r248, 98304;
	shl.b32 	%r249, %r245, 6;
	add.s32 	%r240, %r249, %r33;
	// begin inline asm
	@%p15 cp.async.bulk.tensor.2d.global.shared::cta.bulk_group [%rd41, {%r240, %r241}], [%r242];
	// end inline asm
	cp.async.bulk.commit_group;
	cp.async.bulk.wait_group.read 0;
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
$L__BB0_2:                              // %.backedge
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_7 Depth 2
	.loc	1 17 0                          // matmul_tma_ws.py:17
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
	ld.shared.u8 	%rs1, [%r4+-4];
	setp.eq.s16 	%p2, %rs1, 0;
	@%p2 bra 	$L__BB0_5;
// %bb.3:                               // %.backedge
                                        //   in Loop: Header=BB0_2 Depth=1
	setp.eq.s16 	%p3, %rs1, 1;
	@%p3 bra 	$L__BB0_13;
// %bb.4:                               //   in Loop: Header=BB0_2 Depth=1
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
	bra.uni 	$L__BB0_2;
$L__BB0_5:                              //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 0                           // matmul_tma_ws.py:0:0
	ld.shared.v4.u32 	{%r118, %r119, %r120, %r309}, [global_smem+131072];
	ld.shared.u32 	%rd17, [global_smem+131152];
	ld.shared.u32 	%rd19, [global_smem+131148];
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
$L__tmp4:
	.loc	2 40 22                         // standard.py:40:22 @[ matmul_tma_ws.py:36:27 ]
	add.s32 	%r121, %r118, 127;
	.loc	2 40 28                         // standard.py:40:28 @[ matmul_tma_ws.py:36:27 ]
	shr.s32 	%r122, %r121, 31;
	shr.u32 	%r123, %r122, 25;
	add.s32 	%r124, %r121, %r123;
	shr.s32 	%r125, %r124, 7;
$L__tmp5:
	.loc	2 40 22                         // standard.py:40:22 @[ matmul_tma_ws.py:37:27 ]
	add.s32 	%r126, %r119, 127;
	.loc	2 40 28                         // standard.py:40:28 @[ matmul_tma_ws.py:37:27 ]
	shr.s32 	%r127, %r126, 31;
	shr.u32 	%r128, %r127, 25;
	add.s32 	%r129, %r126, %r128;
	shr.s32 	%r130, %r129, 7;
$L__tmp6:
	.loc	1 38 38                         // matmul_tma_ws.py:38:38
	shl.b32 	%r132, %r130, 3;
	.loc	1 39 22                         // matmul_tma_ws.py:39:22
	div.s32 	%r133, %r5, %r132;
	.loc	1 40 29                         // matmul_tma_ws.py:40:29
	shl.b32 	%r134, %r133, 3;
	.loc	1 41 35                         // matmul_tma_ws.py:41:35
	sub.s32 	%r135, %r125, %r134;
	.loc	1 41 48                         // matmul_tma_ws.py:41:48
	min.s32 	%r137, %r135, 8;
	.loc	1 42 34                         // matmul_tma_ws.py:42:34
	mul.lo.s32 	%r138, %r133, %r132;
	sub.s32 	%r139, %r5, %r138;
	.loc	1 43 40                         // matmul_tma_ws.py:43:40
	div.s32 	%r140, %r139, %r137;
	.loc	1 42 54                         // matmul_tma_ws.py:42:54
	mul.lo.s32 	%r141, %r140, %r137;
	sub.s32 	%r142, %r139, %r141;
	.loc	1 42 27                         // matmul_tma_ws.py:42:27
	add.s32 	%r143, %r142, %r134;
	.loc	1 48 22                         // matmul_tma_ws.py:48:22
	shl.b32 	%r241, %r143, 7;
	.loc	1 49 22                         // matmul_tma_ws.py:49:22
	shl.b32 	%r33, %r140, 7;
$L__tmp7:
	.loc	2 40 22                         // standard.py:40:22 @[ matmul_tma_ws.py:55:33 ]
	add.s32 	%r34, %r120, 63;
$L__tmp8:
	.loc	1 55 22                         // matmul_tma_ws.py:55:22
	setp.lt.s32 	%p4, %r34, 64;
	mov.f32 	%f1935, 0f00000000;
	mov.f32 	%f1936, %f1935;
	mov.f32 	%f1937, %f1935;
	mov.f32 	%f1938, %f1935;
	mov.f32 	%f1939, %f1935;
	mov.f32 	%f1940, %f1935;
	mov.f32 	%f1941, %f1935;
	mov.f32 	%f1942, %f1935;
	mov.f32 	%f1943, %f1935;
	mov.f32 	%f1944, %f1935;
	mov.f32 	%f1945, %f1935;
	mov.f32 	%f1946, %f1935;
	mov.f32 	%f1947, %f1935;
	mov.f32 	%f1948, %f1935;
	mov.f32 	%f1949, %f1935;
	mov.f32 	%f1950, %f1935;
	mov.f32 	%f1951, %f1935;
	mov.f32 	%f1952, %f1935;
	mov.f32 	%f1953, %f1935;
	mov.f32 	%f1954, %f1935;
	mov.f32 	%f1955, %f1935;
	mov.f32 	%f1956, %f1935;
	mov.f32 	%f1957, %f1935;
	mov.f32 	%f1958, %f1935;
	mov.f32 	%f1959, %f1935;
	mov.f32 	%f1960, %f1935;
	mov.f32 	%f1961, %f1935;
	mov.f32 	%f1962, %f1935;
	mov.f32 	%f1963, %f1935;
	mov.f32 	%f1964, %f1935;
	mov.f32 	%f1965, %f1935;
	mov.f32 	%f1966, %f1935;
	mov.f32 	%f1967, %f1935;
	mov.f32 	%f1968, %f1935;
	mov.f32 	%f1969, %f1935;
	mov.f32 	%f1970, %f1935;
	mov.f32 	%f1971, %f1935;
	mov.f32 	%f1972, %f1935;
	mov.f32 	%f1973, %f1935;
	mov.f32 	%f1974, %f1935;
	mov.f32 	%f1975, %f1935;
	mov.f32 	%f1976, %f1935;
	mov.f32 	%f1977, %f1935;
	mov.f32 	%f1978, %f1935;
	mov.f32 	%f1979, %f1935;
	mov.f32 	%f1980, %f1935;
	mov.f32 	%f1981, %f1935;
	mov.f32 	%f1982, %f1935;
	mov.f32 	%f1983, %f1935;
	mov.f32 	%f1984, %f1935;
	mov.f32 	%f1985, %f1935;
	mov.f32 	%f1986, %f1935;
	mov.f32 	%f1987, %f1935;
	mov.f32 	%f1988, %f1935;
	mov.f32 	%f1989, %f1935;
	mov.f32 	%f1990, %f1935;
	mov.f32 	%f1991, %f1935;
	mov.f32 	%f1992, %f1935;
	mov.f32 	%f1993, %f1935;
	mov.f32 	%f1994, %f1935;
	mov.f32 	%f1995, %f1935;
	mov.f32 	%f1996, %f1935;
	mov.f32 	%f1997, %f1935;
	mov.f32 	%f1998, %f1935;
	mov.f32 	%f1999, %f1935;
	mov.f32 	%f2000, %f1935;
	mov.f32 	%f2001, %f1935;
	mov.f32 	%f2002, %f1935;
	mov.f32 	%f2003, %f1935;
	mov.f32 	%f2004, %f1935;
	mov.f32 	%f2005, %f1935;
	mov.f32 	%f2006, %f1935;
	mov.f32 	%f2007, %f1935;
	mov.f32 	%f2008, %f1935;
	mov.f32 	%f2009, %f1935;
	mov.f32 	%f2010, %f1935;
	mov.f32 	%f2011, %f1935;
	mov.f32 	%f2012, %f1935;
	mov.f32 	%f2013, %f1935;
	mov.f32 	%f2014, %f1935;
	mov.f32 	%f2015, %f1935;
	mov.f32 	%f2016, %f1935;
	mov.f32 	%f2017, %f1935;
	mov.f32 	%f2018, %f1935;
	mov.f32 	%f2019, %f1935;
	mov.f32 	%f2020, %f1935;
	mov.f32 	%f2021, %f1935;
	mov.f32 	%f2022, %f1935;
	mov.f32 	%f2023, %f1935;
	mov.f32 	%f2024, %f1935;
	mov.f32 	%f2025, %f1935;
	mov.f32 	%f2026, %f1935;
	mov.f32 	%f2027, %f1935;
	mov.f32 	%f2028, %f1935;
	mov.f32 	%f2029, %f1935;
	mov.f32 	%f2030, %f1935;
	mov.f32 	%f2031, %f1935;
	mov.f32 	%f2032, %f1935;
	mov.f32 	%f2033, %f1935;
	mov.f32 	%f2034, %f1935;
	mov.f32 	%f2035, %f1935;
	mov.f32 	%f2036, %f1935;
	mov.f32 	%f2037, %f1935;
	mov.f32 	%f2038, %f1935;
	mov.f32 	%f2039, %f1935;
	mov.f32 	%f2040, %f1935;
	mov.f32 	%f2041, %f1935;
	mov.f32 	%f2042, %f1935;
	mov.f32 	%f2043, %f1935;
	mov.f32 	%f2044, %f1935;
	mov.f32 	%f2045, %f1935;
	mov.f32 	%f2046, %f1935;
	mov.f32 	%f2047, %f1935;
	mov.f32 	%f2048, %f1935;
	mov.f32 	%f2049, %f1935;
	mov.f32 	%f2050, %f1935;
	mov.f32 	%f2051, %f1935;
	mov.f32 	%f2052, %f1935;
	mov.f32 	%f2053, %f1935;
	mov.f32 	%f2054, %f1935;
	mov.f32 	%f2055, %f1935;
	mov.f32 	%f2056, %f1935;
	mov.f32 	%f2057, %f1935;
	mov.f32 	%f2058, %f1935;
	mov.f32 	%f2059, %f1935;
	mov.f32 	%f2060, %f1935;
	mov.f32 	%f2061, %f1935;
	mov.f32 	%f2062, %f1935;
	@%p4 bra 	$L__BB0_8;
// %bb.6:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 22                          // matmul_tma_ws.py:0:22
	ld.shared.u32 	%r310, [global_smem+131100];
	ld.shared.u32 	%r26, [global_smem+131108];
	ld.shared.u32 	%r27, [global_smem+131112];
	ld.shared.u32 	%r312, [global_smem+131124];
	ld.shared.u32 	%r29, [global_smem+131132];
	ld.shared.u32 	%r30, [global_smem+131136];
	ld.shared.u32 	%r314, [global_smem+131156];
$L__tmp9:
	.loc	2 40 28                         // standard.py:40:28 @[ matmul_tma_ws.py:55:33 ]
	shr.u32 	%r144, %r34, 6;
$L__tmp10:
	.loc	1 55 22                         // matmul_tma_ws.py:55:22
	cvt.u64.u32 	%rd5, %r144;
	mov.f32 	%f1935, 0f00000000;
	mov.b64 	%rd48, 0;
	mov.b32 	%f1674, %r26;
	mov.b32 	%f1675, %r27;
	mov.u32 	%r311, %r310;
	mov.u32 	%r313, %r312;
	mov.f32 	%f1936, %f1935;
	mov.f32 	%f1937, %f1935;
	mov.f32 	%f1938, %f1935;
	mov.f32 	%f1939, %f1935;
	mov.f32 	%f1940, %f1935;
	mov.f32 	%f1941, %f1935;
	mov.f32 	%f1942, %f1935;
	mov.f32 	%f1943, %f1935;
	mov.f32 	%f1944, %f1935;
	mov.f32 	%f1945, %f1935;
	mov.f32 	%f1946, %f1935;
	mov.f32 	%f1947, %f1935;
	mov.f32 	%f1948, %f1935;
	mov.f32 	%f1949, %f1935;
	mov.f32 	%f1950, %f1935;
	mov.f32 	%f1951, %f1935;
	mov.f32 	%f1952, %f1935;
	mov.f32 	%f1953, %f1935;
	mov.f32 	%f1954, %f1935;
	mov.f32 	%f1955, %f1935;
	mov.f32 	%f1956, %f1935;
	mov.f32 	%f1957, %f1935;
	mov.f32 	%f1958, %f1935;
	mov.f32 	%f1959, %f1935;
	mov.f32 	%f1960, %f1935;
	mov.f32 	%f1961, %f1935;
	mov.f32 	%f1962, %f1935;
	mov.f32 	%f1963, %f1935;
	mov.f32 	%f1964, %f1935;
	mov.f32 	%f1965, %f1935;
	mov.f32 	%f1966, %f1935;
	mov.f32 	%f1967, %f1935;
	mov.f32 	%f1968, %f1935;
	mov.f32 	%f1969, %f1935;
	mov.f32 	%f1970, %f1935;
	mov.f32 	%f1971, %f1935;
	mov.f32 	%f1972, %f1935;
	mov.f32 	%f1973, %f1935;
	mov.f32 	%f1974, %f1935;
	mov.f32 	%f1975, %f1935;
	mov.f32 	%f1976, %f1935;
	mov.f32 	%f1977, %f1935;
	mov.f32 	%f1978, %f1935;
	mov.f32 	%f1979, %f1935;
	mov.f32 	%f1980, %f1935;
	mov.f32 	%f1981, %f1935;
	mov.f32 	%f1982, %f1935;
	mov.f32 	%f1983, %f1935;
	mov.f32 	%f1984, %f1935;
	mov.f32 	%f1985, %f1935;
	mov.f32 	%f1986, %f1935;
	mov.f32 	%f1987, %f1935;
	mov.f32 	%f1988, %f1935;
	mov.f32 	%f1989, %f1935;
	mov.f32 	%f1990, %f1935;
	mov.f32 	%f1991, %f1935;
	mov.f32 	%f1992, %f1935;
	mov.f32 	%f1993, %f1935;
	mov.f32 	%f1994, %f1935;
	mov.f32 	%f1995, %f1935;
	mov.f32 	%f1996, %f1935;
	mov.f32 	%f1997, %f1935;
	mov.f32 	%f1998, %f1935;
	mov.f32 	%f1999, %f1935;
	mov.f32 	%f2000, %f1935;
	mov.f32 	%f2001, %f1935;
	mov.f32 	%f2002, %f1935;
	mov.f32 	%f2003, %f1935;
	mov.f32 	%f2004, %f1935;
	mov.f32 	%f2005, %f1935;
	mov.f32 	%f2006, %f1935;
	mov.f32 	%f2007, %f1935;
	mov.f32 	%f2008, %f1935;
	mov.f32 	%f2009, %f1935;
	mov.f32 	%f2010, %f1935;
	mov.f32 	%f2011, %f1935;
	mov.f32 	%f2012, %f1935;
	mov.f32 	%f2013, %f1935;
	mov.f32 	%f2014, %f1935;
	mov.f32 	%f2015, %f1935;
	mov.f32 	%f2016, %f1935;
	mov.f32 	%f2017, %f1935;
	mov.f32 	%f2018, %f1935;
	mov.f32 	%f2019, %f1935;
	mov.f32 	%f2020, %f1935;
	mov.f32 	%f2021, %f1935;
	mov.f32 	%f2022, %f1935;
	mov.f32 	%f2023, %f1935;
	mov.f32 	%f2024, %f1935;
	mov.f32 	%f2025, %f1935;
	mov.f32 	%f2026, %f1935;
	mov.f32 	%f2027, %f1935;
	mov.f32 	%f2028, %f1935;
	mov.f32 	%f2029, %f1935;
	mov.f32 	%f2030, %f1935;
	mov.f32 	%f2031, %f1935;
	mov.f32 	%f2032, %f1935;
	mov.f32 	%f2033, %f1935;
	mov.f32 	%f2034, %f1935;
	mov.f32 	%f2035, %f1935;
	mov.f32 	%f2036, %f1935;
	mov.f32 	%f2037, %f1935;
	mov.f32 	%f2038, %f1935;
	mov.f32 	%f2039, %f1935;
	mov.f32 	%f2040, %f1935;
	mov.f32 	%f2041, %f1935;
	mov.f32 	%f2042, %f1935;
	mov.f32 	%f2043, %f1935;
	mov.f32 	%f2044, %f1935;
	mov.f32 	%f2045, %f1935;
	mov.f32 	%f2046, %f1935;
	mov.f32 	%f2047, %f1935;
	mov.f32 	%f2048, %f1935;
	mov.f32 	%f2049, %f1935;
	mov.f32 	%f2050, %f1935;
	mov.f32 	%f2051, %f1935;
	mov.f32 	%f2052, %f1935;
	mov.f32 	%f2053, %f1935;
	mov.f32 	%f2054, %f1935;
	mov.f32 	%f2055, %f1935;
	mov.f32 	%f2056, %f1935;
	mov.f32 	%f2057, %f1935;
	mov.f32 	%f2058, %f1935;
	mov.f32 	%f2059, %f1935;
	mov.f32 	%f2060, %f1935;
	mov.f32 	%f2061, %f1935;
	mov.f32 	%f2062, %f1935;
$L__BB0_7:                              // %.lr.ph
                                        //   Parent Loop BB0_2 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc	1 58 77                         // matmul_tma_ws.py:58:77
	mul.hi.u64 	%rd37, %rd48, -6148914691236517205;
	shr.u64 	%rd38, %rd37, 1;
	cvt.u32.u64 	%r148, %rd38;
	mul.lo.s32 	%r149, %r148, 24;
	sub.s32 	%r147, %r314, %r149;
	mul.lo.s32 	%r150, %r148, -49152;
	add.s32 	%r151, %r313, %r150;
	mul.lo.s32 	%r152, %r148, 49152;
	sub.s32 	%r153, %r312, %r152;
	add.s32 	%r154, %r311, %r150;
	sub.s32 	%r155, %r310, %r152;
	mad.lo.s32 	%r145, %r148, -24, %r309;
	.loc	1 17 0                          // matmul_tma_ws.py:17
	and.b32  	%r156, %r148, 1;
	neg.s32 	%r146, %r156;
	// begin inline asm
	{                                                           
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r145], %r146;           
	@!P1 bra.uni waitLoop;                                      
	}                                                           
	
	// end inline asm
	.loc	1 63 35                         // matmul_tma_ws.py:63:35
	shfl.sync.idx.b32	%r157, %r6, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r158, %r155, 4, 14;
	cvt.u64.u32 	%rd39, %r158;
	or.b64  	%rd21, %rd39, 4611686293338849280;
	bfe.u32 	%r159, %r153, 4, 14;
	cvt.u64.u32 	%rd40, %r159;
	or.b64  	%rd22, %rd40, 4611686293372403712;
	mov.pred 	%p5, -1;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f1935,%f1936,%f1937,%f1938,%f1939,%f1940,%f1941,%f1942,%f1943,%f1944,%f1945,%f1946,%f1947,%f1948,%f1949,%f1950,%f1951,%f1952,%f1953,%f1954,%f1955,%f1956,%f1957,%f1958,%f1959,%f1960,%f1961,%f1962,%f1963,%f1964,%f1965,%f1966,%f1967,%f1968,%f1969,%f1970,%f1971,%f1972,%f1973,%f1974,%f1975,%f1976,%f1977,%f1978,%f1979,%f1980,%f1981,%f1982,%f1983,%f1984,%f1985,%f1986,%f1987,%f1988,%f1989,%f1990,%f1991,%f1992,%f1993,%f1994,%f1995,%f1996,%f1997,%f1998}, %rd21, %rd22, %p5, 1, 1, 1, 0;
	// end inline asm
	add.s64 	%rd23, %rd39, 4611686293338849408;
	add.s64 	%rd24, %rd40, 4611686293372403714;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f1935,%f1936,%f1937,%f1938,%f1939,%f1940,%f1941,%f1942,%f1943,%f1944,%f1945,%f1946,%f1947,%f1948,%f1949,%f1950,%f1951,%f1952,%f1953,%f1954,%f1955,%f1956,%f1957,%f1958,%f1959,%f1960,%f1961,%f1962,%f1963,%f1964,%f1965,%f1966,%f1967,%f1968,%f1969,%f1970,%f1971,%f1972,%f1973,%f1974,%f1975,%f1976,%f1977,%f1978,%f1979,%f1980,%f1981,%f1982,%f1983,%f1984,%f1985,%f1986,%f1987,%f1988,%f1989,%f1990,%f1991,%f1992,%f1993,%f1994,%f1995,%f1996,%f1997,%f1998}, %rd23, %rd24, %p5, 1, 1, 1, 0;
	// end inline asm
	add.s64 	%rd25, %rd39, 4611686293338849536;
	add.s64 	%rd26, %rd40, 4611686293372403716;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f1935,%f1936,%f1937,%f1938,%f1939,%f1940,%f1941,%f1942,%f1943,%f1944,%f1945,%f1946,%f1947,%f1948,%f1949,%f1950,%f1951,%f1952,%f1953,%f1954,%f1955,%f1956,%f1957,%f1958,%f1959,%f1960,%f1961,%f1962,%f1963,%f1964,%f1965,%f1966,%f1967,%f1968,%f1969,%f1970,%f1971,%f1972,%f1973,%f1974,%f1975,%f1976,%f1977,%f1978,%f1979,%f1980,%f1981,%f1982,%f1983,%f1984,%f1985,%f1986,%f1987,%f1988,%f1989,%f1990,%f1991,%f1992,%f1993,%f1994,%f1995,%f1996,%f1997,%f1998}, %rd25, %rd26, %p5, 1, 1, 1, 0;
	// end inline asm
	add.s64 	%rd27, %rd39, 4611686293338849664;
	add.s64 	%rd28, %rd40, 4611686293372403718;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f1935,%f1936,%f1937,%f1938,%f1939,%f1940,%f1941,%f1942,%f1943,%f1944,%f1945,%f1946,%f1947,%f1948,%f1949,%f1950,%f1951,%f1952,%f1953,%f1954,%f1955,%f1956,%f1957,%f1958,%f1959,%f1960,%f1961,%f1962,%f1963,%f1964,%f1965,%f1966,%f1967,%f1968,%f1969,%f1970,%f1971,%f1972,%f1973,%f1974,%f1975,%f1976,%f1977,%f1978,%f1979,%f1980,%f1981,%f1982,%f1983,%f1984,%f1985,%f1986,%f1987,%f1988,%f1989,%f1990,%f1991,%f1992,%f1993,%f1994,%f1995,%f1996,%f1997,%f1998}, %rd27, %rd28, %p5, 1, 1, 1, 0;
	// end inline asm
	add.s64 	%rd29, %rd39, 4611686293338849792;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f1999,%f2000,%f2001,%f2002,%f2003,%f2004,%f2005,%f2006,%f2007,%f2008,%f2009,%f2010,%f2011,%f2012,%f2013,%f2014,%f2015,%f2016,%f2017,%f2018,%f2019,%f2020,%f2021,%f2022,%f2023,%f2024,%f2025,%f2026,%f2027,%f2028,%f2029,%f2030,%f2031,%f2032,%f2033,%f2034,%f2035,%f2036,%f2037,%f2038,%f2039,%f2040,%f2041,%f2042,%f2043,%f2044,%f2045,%f2046,%f2047,%f2048,%f2049,%f2050,%f2051,%f2052,%f2053,%f2054,%f2055,%f2056,%f2057,%f2058,%f2059,%f2060,%f2061,%f2062}, %rd29, %rd22, %p5, 1, 1, 1, 0;
	// end inline asm
	add.s64 	%rd31, %rd39, 4611686293338849920;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f1999,%f2000,%f2001,%f2002,%f2003,%f2004,%f2005,%f2006,%f2007,%f2008,%f2009,%f2010,%f2011,%f2012,%f2013,%f2014,%f2015,%f2016,%f2017,%f2018,%f2019,%f2020,%f2021,%f2022,%f2023,%f2024,%f2025,%f2026,%f2027,%f2028,%f2029,%f2030,%f2031,%f2032,%f2033,%f2034,%f2035,%f2036,%f2037,%f2038,%f2039,%f2040,%f2041,%f2042,%f2043,%f2044,%f2045,%f2046,%f2047,%f2048,%f2049,%f2050,%f2051,%f2052,%f2053,%f2054,%f2055,%f2056,%f2057,%f2058,%f2059,%f2060,%f2061,%f2062}, %rd31, %rd24, %p5, 1, 1, 1, 0;
	// end inline asm
	add.s64 	%rd33, %rd39, 4611686293338850048;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f1999,%f2000,%f2001,%f2002,%f2003,%f2004,%f2005,%f2006,%f2007,%f2008,%f2009,%f2010,%f2011,%f2012,%f2013,%f2014,%f2015,%f2016,%f2017,%f2018,%f2019,%f2020,%f2021,%f2022,%f2023,%f2024,%f2025,%f2026,%f2027,%f2028,%f2029,%f2030,%f2031,%f2032,%f2033,%f2034,%f2035,%f2036,%f2037,%f2038,%f2039,%f2040,%f2041,%f2042,%f2043,%f2044,%f2045,%f2046,%f2047,%f2048,%f2049,%f2050,%f2051,%f2052,%f2053,%f2054,%f2055,%f2056,%f2057,%f2058,%f2059,%f2060,%f2061,%f2062}, %rd33, %rd26, %p5, 1, 1, 1, 0;
	// end inline asm
	add.s64 	%rd35, %rd39, 4611686293338850176;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f1999,%f2000,%f2001,%f2002,%f2003,%f2004,%f2005,%f2006,%f2007,%f2008,%f2009,%f2010,%f2011,%f2012,%f2013,%f2014,%f2015,%f2016,%f2017,%f2018,%f2019,%f2020,%f2021,%f2022,%f2023,%f2024,%f2025,%f2026,%f2027,%f2028,%f2029,%f2030,%f2031,%f2032,%f2033,%f2034,%f2035,%f2036,%f2037,%f2038,%f2039,%f2040,%f2041,%f2042,%f2043,%f2044,%f2045,%f2046,%f2047,%f2048,%f2049,%f2050,%f2051,%f2052,%f2053,%f2054,%f2055,%f2056,%f2057,%f2058,%f2059,%f2060,%f2061,%f2062}, %rd35, %rd28, %p5, 1, 1, 1, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%f1539, %r154;
	mov.b32 	%f1542, %r151;
	mov.b32 	%f1543, %r29;
	mov.b32 	%f1544, %r30;
	mov.f32 	%f1541, %f1675;
	mov.f32 	%f1540, %f1674;
	// begin inline asm
	// wait for regs: %f1935,%f1936,%f1937,%f1938,%f1939,%f1940,%f1941,%f1942,%f1943,%f1944,%f1945,%f1946,%f1947,%f1948,%f1949,%f1950,%f1951,%f1952,%f1953,%f1954,%f1955,%f1956,%f1957,%f1958,%f1959,%f1960,%f1961,%f1962,%f1963,%f1964,%f1965,%f1966,%f1967,%f1968,%f1969,%f1970,%f1971,%f1972,%f1973,%f1974,%f1975,%f1976,%f1977,%f1978,%f1979,%f1980,%f1981,%f1982,%f1983,%f1984,%f1985,%f1986,%f1987,%f1988,%f1989,%f1990,%f1991,%f1992,%f1993,%f1994,%f1995,%f1996,%f1997,%f1998,%f1999,%f2000,%f2001,%f2002,%f2003,%f2004,%f2005,%f2006,%f2007,%f2008,%f2009,%f2010,%f2011,%f2012,%f2013,%f2014,%f2015,%f2016,%f2017,%f2018,%f2019,%f2020,%f2021,%f2022,%f2023,%f2024,%f2025,%f2026,%f2027,%f2028,%f2029,%f2030,%f2031,%f2032,%f2033,%f2034,%f2035,%f2036,%f2037,%f2038,%f2039,%f2040,%f2041,%f2042,%f2043,%f2044,%f2045,%f2046,%f2047,%f2048,%f2049,%f2050,%f2051,%f2052,%f2053,%f2054,%f2055,%f2056,%f2057,%f2058,%f2059,%f2060,%f2061,%f2062,%f1539,%f1540,%f1541,%f1542,%f1543,%f1544
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	// begin inline asm
	@%p5 mbarrier.arrive.shared.b64 _, [%r147];
	// end inline asm
	.loc	1 55 22                         // matmul_tma_ws.py:55:22
	add.s64 	%rd48, %rd48, 1;
	add.s32 	%r314, %r314, 8;
	add.s32 	%r313, %r313, 16384;
	add.s32 	%r312, %r312, 16384;
	add.s32 	%r311, %r311, 16384;
	add.s32 	%r310, %r310, 16384;
	add.s32 	%r309, %r309, 8;
	setp.ne.s64 	%p14, %rd5, %rd48;
	@%p14 bra 	$L__BB0_7;
	bra.uni 	$L__BB0_8;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/mren/MetaMain2/triton/python/gemmbench/impls/matmul_tma_ws.py"
	.file	2 "/home/mren/MetaMain/triton/python/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 207                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc8 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 109                                 // DW_AT_name
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 116
.b8 109
.b8 97
.b8 95
.b8 119
.b8 115
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 109
.b8 114
.b8 101
.b8 110
.b8 47
.b8 77
.b8 101
.b8 116
.b8 97
.b8 77
.b8 97
.b8 105
.b8 110
.b8 50
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 47
.b8 103
.b8 101
.b8 109
.b8 109
.b8 98
.b8 101
.b8 110
.b8 99
.b8 104
.b8 47
.b8 105
.b8 109
.b8 112
.b8 108
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x5d:0x17 DW_TAG_subprogram
.b8 109                                 // DW_AT_name
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 116
.b8 109
.b8 97
.b8 95
.b8 119
.b8 115
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x74:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 93                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x89:0x18 DW_TAG_inlined_subroutine
.b32 93                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 33                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xa1:0x18 DW_TAG_inlined_subroutine
.b32 93                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb9:0x18 DW_TAG_inlined_subroutine
.b32 93                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
