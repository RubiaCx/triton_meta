//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_100a
.address_size 64

	// .globl	matmul_persistent_tma_ws_kernel // -- Begin function matmul_persistent_tma_ws_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @matmul_persistent_tma_ws_kernel
.visible .entry matmul_persistent_tma_ws_kernel(
	.param .align 64 .b8 matmul_persistent_tma_ws_kernel_param_0[128],
	.param .align 64 .b8 matmul_persistent_tma_ws_kernel_param_1[128],
	.param .align 64 .b8 matmul_persistent_tma_ws_kernel_param_2[128],
	.param .u32 matmul_persistent_tma_ws_kernel_param_3,
	.param .u32 matmul_persistent_tma_ws_kernel_param_4,
	.param .u32 matmul_persistent_tma_ws_kernel_param_5,
	.param .u32 matmul_persistent_tma_ws_kernel_param_6,
	.param .u32 matmul_persistent_tma_ws_kernel_param_7,
	.param .u32 matmul_persistent_tma_ws_kernel_param_8,
	.param .u64 .ptr .global .align 1 matmul_persistent_tma_ws_kernel_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<76>;
	.reg .b32 	%r<1006>;
	.reg .f32 	%f<257>;
	.reg .b64 	%rd<58>;
	.loc	1 114 0                         // matmul_persistent_tma_ws.py:114:0
$L__func_begin0:
	.loc	1 114 0                         // matmul_persistent_tma_ws.py:114:0

// %bb.0:
	ld.param.u32 	%r81, [matmul_persistent_tma_ws_kernel_param_5];
	ld.param.u32 	%r80, [matmul_persistent_tma_ws_kernel_param_4];
	ld.param.u32 	%r79, [matmul_persistent_tma_ws_kernel_param_3];
$L__tmp0:
	.loc	1 114 0                         // matmul_persistent_tma_ws.py:114:0
	mov.u32 	%r1, %tid.x;
	setp.lt.u32 	%p8, %r1, 32;
	mov.u32 	%r82, global_smem;
	// begin inline asm
	@%p8 tcgen05.alloc.cta_group::1.sync.aligned.shared::cta.b32 [%r82], 256;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%rd4, [global_smem];
	bar.sync 	0;
	// begin inline asm
	@%p8 tcgen05.relinquish_alloc_permit.cta_group::1.sync.aligned;
	// end inline asm
	setp.eq.s32 	%p10, %r1, 0;
	add.s32 	%r83, %r82, 212992;
	// begin inline asm
	@%p10 mbarrier.init.shared::cta.b64 [%r83], 1;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r84, %r82, 213000;
	// begin inline asm
	@%p10 mbarrier.init.shared::cta.b64 [%r84], 1;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r85, %r82, 213008;
	// begin inline asm
	@%p10 mbarrier.init.shared::cta.b64 [%r85], 1;
	// end inline asm
	add.s32 	%r86, %r82, 213024;
	// begin inline asm
	@%p10 mbarrier.init.shared::cta.b64 [%r86], 1;
	// end inline asm
	add.s32 	%r87, %r82, 213056;
	// begin inline asm
	@%p10 mbarrier.init.shared::cta.b64 [%r87], 128;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r88, %r82, 213032;
	// begin inline asm
	@%p10 mbarrier.init.shared::cta.b64 [%r88], 1;
	// end inline asm
	add.s32 	%r89, %r82, 213064;
	// begin inline asm
	@%p10 mbarrier.init.shared::cta.b64 [%r89], 128;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r90, %r82, 213040;
	// begin inline asm
	@%p10 mbarrier.init.shared::cta.b64 [%r90], 1;
	// end inline asm
	add.s32 	%r91, %r82, 213072;
	// begin inline asm
	@%p10 mbarrier.init.shared::cta.b64 [%r91], 128;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	{
.reg .u32 a<5>;              
mov.u32 a0, %tid.x;          
mov.u32 a1, %tid.y;          
mov.u32 a2, %tid.z;          
mov.u32 a3, %ntid.x;         
mov.u32 a4, %ntid.y;         
mad.lo.u32 a1, a2, a4, a1;   
mad.lo.u32 a0, a1, a3, a0;   
shr.u32 a0, a0, 5;           
.reg .b32         %tmp<3>;   
mov.u32   %tmp0, -1;         
mov.u32   %tmp1, 31;         
mov.u32   %tmp2, 0;          
shfl.sync.idx.b32         %r92, a0, %tmp2, %tmp1, %tmp0;           
}
	// end inline asm
	shr.u32 	%r93, %r92, 2;
	setp.eq.s32 	%p19, %r93, 1;
	cvt.u32.u64 	%r490, %rd4;
	@%p19 bra 	$L__BB0_8;
// %bb.1:
	setp.ne.s32 	%p20, %r93, 0;
	@%p20 bra 	$L__BB0_20;
// %bb.2:
	// begin inline asm
	setmaxnreg.dec.sync.aligned.u32 40;
	// end inline asm
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r945, %r80, 255;
	add.s32 	%r946, %r79, 127;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r947, %r946, 31;
	shr.u32 	%r948, %r947, 25;
	add.s32 	%r949, %r946, %r948;
	shr.s32 	%r2, %r949, 7;
	shr.s32 	%r950, %r945, 31;
	shr.u32 	%r951, %r950, 24;
	add.s32 	%r952, %r945, %r951;
	shr.s32 	%r953, %r952, 8;
$L__tmp2:
	.loc	1 137 43                        // matmul_persistent_tma_ws.py:137:43
	mul.lo.s32 	%r3, %r953, %r2;
	.loc	1 138 35                        // matmul_persistent_tma_ws.py:138:35
	mov.u32 	%r997, %ctaid.x;
	.loc	1 138 50                        // matmul_persistent_tma_ws.py:138:50
	setp.ge.s32 	%p60, %r997, %r3;
	@%p60 bra 	$L__BB0_20;
// %bb.3:                               // %.lr.ph31
	.loc	1 0 50                          // matmul_persistent_tma_ws.py:0:50
	mov.b64 	%rd11, matmul_persistent_tma_ws_kernel_param_0;
	mov.b64 	%rd14, matmul_persistent_tma_ws_kernel_param_1;
	mov.u64 	%rd15, %rd14;
	cvta.param.u64 	%rd55, %rd15;
	mov.u64 	%rd16, %rd11;
	cvta.param.u64 	%rd54, %rd16;
	mov.u32 	%r5, %nctaid.x;
	shl.b32 	%r6, %r953, 3;
	add.s32 	%r7, %r81, 63;
	shr.s32 	%r954, %r7, 31;
	shr.u32 	%r955, %r954, 26;
	add.s32 	%r956, %r7, %r955;
	shr.s32 	%r8, %r956, 6;
	shr.u32 	%r9, %r1, 5;
	cvt.s64.s32 	%rd5, %r8;
	mov.b64 	%rd56, 0;
	setp.lt.s32 	%p61, %r7, 64;
	setp.lt.u32 	%p65, %r1, 128;
	bra.uni 	$L__BB0_4;
$L__BB0_7:                              // %._crit_edge29
                                        //   in Loop: Header=BB0_4 Depth=1
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	add.s64 	%rd56, %rd56, %rd5;
	.loc	1 138 50                        // matmul_persistent_tma_ws.py:138:50
	add.s32 	%r997, %r997, %r5;
	setp.lt.s32 	%p72, %r997, %r3;
	@%p72 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_20;
$L__BB0_4:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	@%p61 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph28.preheader
                                        //   in Loop: Header=BB0_4 Depth=1
	.loc	1 0 0                           // matmul_persistent_tma_ws.py:0:0
	div.s32 	%r958, %r997, %r6;
	shl.b32 	%r959, %r958, 3;
	sub.s32 	%r960, %r2, %r959;
	min.s32 	%r962, %r960, 8;
	mul.lo.s32 	%r963, %r958, %r6;
	sub.s32 	%r964, %r997, %r963;
	div.s32 	%r965, %r964, %r962;
	mul.lo.s32 	%r966, %r965, %r962;
	sub.s32 	%r967, %r964, %r966;
	add.s32 	%r968, %r967, %r959;
	shl.b32 	%r975, %r968, 7;
	shl.b32 	%r12, %r965, 8;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mul.hi.u64 	%rd50, %rd56, -6148914691236517205;
	shr.u64 	%rd51, %rd50, 1;
	and.b64  	%rd52, %rd51, 1;
	setp.eq.b64 	%p74, %rd52, 1;
	mad.lo.s64 	%rd53, %rd51, 4294967293, %rd56;
	cvt.u32.u64 	%r999, %rd53;
	mov.b32 	%r1000, 0;
	mov.u32 	%r998, %r8;
$L__BB0_6:                              // %.lr.ph28
                                        //   Parent Loop BB0_4 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc	1 166 20                        // matmul_persistent_tma_ws.py:166:20
	shl.b32 	%r981, %r999, 3;
	add.s32 	%r983, %r82, %r981;
	add.s32 	%r970, %r983, 213056;
	not.pred 	%p67, %p74;
	selp.u32 	%r971, 1, 0, %p67;
	// begin inline asm
	{                                                           
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r970], %r971;           
	@!P1 bra.uni waitLoop;                                      
	}                                                           
	
	// end inline asm
	.loc	1 114 0                         // matmul_persistent_tma_ws.py:114:0
	add.s32 	%r976, %r983, 212992;
	// begin inline asm
	bar.sync 0x1, 0x80;
	// end inline asm
	// begin inline asm
	@%p10 mbarrier.arrive.expect_tx.shared.b64 _, [%r976], 49152;
	// end inline asm
	shl.b32 	%r984, %r999, 14;
	add.s32 	%r985, %r82, %r984;
	add.s32 	%r973, %r985, 163840;
	// begin inline asm
	bar.sync 0x1, 0x80;
	// end inline asm
	elect.sync 	%r986|%p68, -1;
	and.pred  	%p63, %p8, %p68;
	// begin inline asm
	@%p63 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r973], [%rd54, {%r1000, %r975}], [%r976];
	// end inline asm
	shl.b32 	%r987, %r999, 15;
	add.s32 	%r988, %r82, %r987;
	// begin inline asm
	bar.sync 0x1, 0x80;
	// end inline asm
	shfl.sync.idx.b32	%r989, %r9, 0, 31, -1;
	elect.sync 	%r990|%p69, -1;
	and.pred  	%p64, %p65, %p69;
	shl.b32 	%r991, %r989, 13;
	add.s32 	%r977, %r988, %r991;
	shl.b32 	%r992, %r989, 6;
	add.s32 	%r978, %r992, %r12;
	// begin inline asm
	@%p64 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r977], [%rd55, {%r978, %r1000}], [%r976];
	// end inline asm
	.loc	1 174 22                        // matmul_persistent_tma_ws.py:174:22
	add.s32 	%r1000, %r1000, 64;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	add.s32 	%r993, %r999, 1;
	setp.gt.u32 	%p70, %r993, 2;
	add.s32 	%r994, %r999, -2;
	selp.b32 	%r999, %r994, %r993, %p70;
	xor.pred  	%p74, %p74, %p70;
	add.s32 	%r998, %r998, -1;
	setp.ne.s32 	%p71, %r998, 0;
	@%p71 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_8:
	.loc	1 114 0                         // matmul_persistent_tma_ws.py:114:0
	// begin inline asm
	setmaxnreg.inc.sync.aligned.u32 232;
	// end inline asm
$L__tmp3:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r94, %r80, 255;
	add.s32 	%r95, %r79, 127;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r96, %r95, 31;
	shr.u32 	%r97, %r96, 25;
	add.s32 	%r98, %r95, %r97;
	shr.s32 	%r21, %r98, 7;
	shr.s32 	%r99, %r94, 31;
	shr.u32 	%r100, %r99, 24;
	add.s32 	%r101, %r94, %r100;
	shr.s32 	%r102, %r101, 8;
$L__tmp4:
	.loc	1 137 43                        // matmul_persistent_tma_ws.py:137:43
	mul.lo.s32 	%r22, %r102, %r21;
	.loc	1 138 35                        // matmul_persistent_tma_ws.py:138:35
	mov.u32 	%r1001, %ctaid.x;
	.loc	1 138 50                        // matmul_persistent_tma_ws.py:138:50
	setp.ge.s32 	%p21, %r1001, %r22;
	@%p21 bra 	$L__BB0_19;
// %bb.9:                               // %.lr.ph25
	.loc	1 0 50                          // matmul_persistent_tma_ws.py:0:50
	mov.b64 	%rd12, matmul_persistent_tma_ws_kernel_param_2;
	mov.u64 	%rd13, %rd12;
	cvta.param.u64 	%rd48, %rd13;
	mov.u32 	%r24, %nctaid.x;
	shl.b32 	%r25, %r102, 3;
	add.s32 	%r26, %r81, 63;
	shr.s32 	%r103, %r26, 31;
	shr.u32 	%r104, %r103, 26;
	add.s32 	%r105, %r26, %r104;
	shr.s32 	%r27, %r105, 6;
	shr.u32 	%r28, %r1, 5;
	add.s32 	%r29, %r490, -256;
	cvt.s64.s32 	%rd8, %r27;
	and.b32  	%r107, %r1, 1;
	neg.s32 	%r108, %r107;
	and.b32  	%r109, %r108, 72;
	bfe.s32 	%r110, %r1, 1, 1;
	and.b32  	%r111, %r110, 144;
	or.b32  	%r112, %r109, %r111;
	bfe.s32 	%r113, %r1, 2, 1;
	and.b32  	%r114, %r113, 288;
	shl.b32 	%r115, %r1, 6;
	and.b32  	%r116, %r115, 7680;
	or.b32  	%r117, %r116, %r114;
	or.b32  	%r118, %r117, %r112;
	shl.b32 	%r119, %r118, 1;
	add.s32 	%r121, %r82, 98304;
	add.s32 	%r30, %r121, %r119;
	xor.b32  	%r122, %r118, 8;
	shl.b32 	%r123, %r122, 1;
	add.s32 	%r31, %r121, %r123;
	or.b32  	%r124, %r109, 16;
	xor.b32  	%r125, %r124, %r111;
	or.b32  	%r126, %r117, %r125;
	shl.b32 	%r127, %r126, 1;
	add.s32 	%r32, %r121, %r127;
	xor.b32  	%r128, %r118, 24;
	shl.b32 	%r129, %r128, 1;
	add.s32 	%r33, %r121, %r129;
	or.b32  	%r130, %r112, 32;
	xor.b32  	%r131, %r130, %r114;
	or.b32  	%r132, %r116, %r131;
	shl.b32 	%r133, %r132, 1;
	add.s32 	%r34, %r121, %r133;
	xor.b32  	%r134, %r118, 40;
	shl.b32 	%r135, %r134, 1;
	add.s32 	%r35, %r121, %r135;
	or.b32  	%r136, %r109, 48;
	or.b32  	%r137, %r114, %r111;
	xor.b32  	%r138, %r137, %r136;
	or.b32  	%r139, %r116, %r138;
	shl.b32 	%r140, %r139, 1;
	add.s32 	%r36, %r121, %r140;
	xor.b32  	%r141, %r118, 56;
	shl.b32 	%r142, %r141, 1;
	add.s32 	%r37, %r121, %r142;
	xor.b32  	%r143, %r118, 8200;
	shl.b32 	%r144, %r143, 1;
	add.s32 	%r38, %r121, %r144;
	or.b32  	%r145, %r109, 8208;
	xor.b32  	%r146, %r145, %r111;
	or.b32  	%r147, %r117, %r146;
	shl.b32 	%r148, %r147, 1;
	add.s32 	%r39, %r121, %r148;
	xor.b32  	%r149, %r118, 8216;
	shl.b32 	%r150, %r149, 1;
	add.s32 	%r40, %r121, %r150;
	or.b32  	%r151, %r112, 8224;
	xor.b32  	%r152, %r151, %r114;
	or.b32  	%r153, %r116, %r152;
	shl.b32 	%r154, %r153, 1;
	add.s32 	%r41, %r121, %r154;
	xor.b32  	%r155, %r118, 8232;
	shl.b32 	%r156, %r155, 1;
	add.s32 	%r42, %r121, %r156;
	or.b32  	%r157, %r109, 8240;
	xor.b32  	%r158, %r137, %r157;
	or.b32  	%r159, %r116, %r158;
	shl.b32 	%r160, %r159, 1;
	add.s32 	%r43, %r121, %r160;
	xor.b32  	%r161, %r118, 8248;
	shl.b32 	%r162, %r161, 1;
	add.s32 	%r44, %r121, %r162;
	xor.b32  	%r163, %r118, 16392;
	shl.b32 	%r164, %r163, 1;
	add.s32 	%r45, %r121, %r164;
	or.b32  	%r165, %r109, 16400;
	xor.b32  	%r166, %r165, %r111;
	or.b32  	%r167, %r117, %r166;
	shl.b32 	%r168, %r167, 1;
	add.s32 	%r46, %r121, %r168;
	xor.b32  	%r169, %r118, 16408;
	shl.b32 	%r170, %r169, 1;
	add.s32 	%r47, %r121, %r170;
	or.b32  	%r171, %r112, 16416;
	xor.b32  	%r172, %r171, %r114;
	or.b32  	%r173, %r116, %r172;
	shl.b32 	%r174, %r173, 1;
	add.s32 	%r48, %r121, %r174;
	xor.b32  	%r175, %r118, 16424;
	shl.b32 	%r176, %r175, 1;
	add.s32 	%r49, %r121, %r176;
	or.b32  	%r177, %r109, 16432;
	xor.b32  	%r178, %r137, %r177;
	or.b32  	%r179, %r116, %r178;
	shl.b32 	%r180, %r179, 1;
	add.s32 	%r50, %r121, %r180;
	xor.b32  	%r181, %r118, 16440;
	shl.b32 	%r182, %r181, 1;
	add.s32 	%r51, %r121, %r182;
	xor.b32  	%r183, %r118, 24584;
	shl.b32 	%r184, %r183, 1;
	add.s32 	%r52, %r121, %r184;
	or.b32  	%r185, %r109, 24592;
	xor.b32  	%r186, %r185, %r111;
	or.b32  	%r187, %r117, %r186;
	shl.b32 	%r188, %r187, 1;
	add.s32 	%r53, %r121, %r188;
	xor.b32  	%r189, %r118, 24600;
	shl.b32 	%r190, %r189, 1;
	add.s32 	%r54, %r121, %r190;
	or.b32  	%r191, %r112, 24608;
	xor.b32  	%r192, %r191, %r114;
	or.b32  	%r193, %r116, %r192;
	shl.b32 	%r194, %r193, 1;
	add.s32 	%r55, %r121, %r194;
	xor.b32  	%r195, %r118, 24616;
	shl.b32 	%r196, %r195, 1;
	add.s32 	%r56, %r121, %r196;
	or.b32  	%r197, %r109, 24624;
	xor.b32  	%r198, %r137, %r197;
	or.b32  	%r199, %r116, %r198;
	shl.b32 	%r200, %r199, 1;
	add.s32 	%r57, %r121, %r200;
	xor.b32  	%r201, %r118, 24632;
	shl.b32 	%r202, %r201, 1;
	add.s32 	%r58, %r121, %r202;
	and.b32  	%r59, %r1, -128;
	add.s32 	%r60, %r81, -1;
	.loc	1 138 50                        // matmul_persistent_tma_ws.py:138:50
	add.s32 	%r61, %r27, -1;
	mov.b64 	%rd57, 0;
	setp.lt.s32 	%p25, %r26, 64;
	setp.eq.s32 	%p24, %r1, 128;
	bra.uni 	$L__BB0_10;
$L__BB0_18:                             // %._crit_edge
                                        //   in Loop: Header=BB0_10 Depth=1
	.loc	1 0 50                          // matmul_persistent_tma_ws.py:0:50
	setp.eq.s32 	%p57, %r59, 128;
	setp.gt.s32 	%p54, %r26, 63;
	.loc	1 173 43                        // matmul_persistent_tma_ws.py:173:43
	// begin inline asm
	bar.sync 0x2, 0x80;
	// end inline asm
	// begin inline asm
	{                                                           
	@!%p54 bra.uni skipWait;                                      
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r547], %r1005;           
	@!P1 bra.uni waitLoop;                                      
	skipWait:                                                   
	}                                                           
	
	// end inline asm
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	// begin inline asm
	tcgen05.ld.sync.aligned.32x32b.x128.b32 {%r549, %r550, %r551, %r552, %r553, %r554, %r555, %r556, %r557, %r558, %r559, %r560, %r561, %r562, %r563, %r564, %r565, %r566, %r567, %r568, %r569, %r570, %r571, %r572, %r573, %r574, %r575, %r576, %r577, %r578, %r579, %r580, %r581, %r582, %r583, %r584, %r585, %r586, %r587, %r588, %r589, %r590, %r591, %r592, %r593, %r594, %r595, %r596, %r597, %r598, %r599, %r600, %r601, %r602, %r603, %r604, %r605, %r606, %r607, %r608, %r609, %r610, %r611, %r612, %r613, %r614, %r615, %r616, %r617, %r618, %r619, %r620, %r621, %r622, %r623, %r624, %r625, %r626, %r627, %r628, %r629, %r630, %r631, %r632, %r633, %r634, %r635, %r636, %r637, %r638, %r639, %r640, %r641, %r642, %r643, %r644, %r645, %r646, %r647, %r648, %r649, %r650, %r651, %r652, %r653, %r654, %r655, %r656, %r657, %r658, %r659, %r660, %r661, %r662, %r663, %r664, %r665, %r666, %r667, %r668, %r669, %r670, %r671, %r672, %r673, %r674, %r675, %r676}, [%r677];
	// end inline asm
	// begin inline asm
	tcgen05.ld.sync.aligned.32x32b.x128.b32 {%r678, %r679, %r680, %r681, %r682, %r683, %r684, %r685, %r686, %r687, %r688, %r689, %r690, %r691, %r692, %r693, %r694, %r695, %r696, %r697, %r698, %r699, %r700, %r701, %r702, %r703, %r704, %r705, %r706, %r707, %r708, %r709, %r710, %r711, %r712, %r713, %r714, %r715, %r716, %r717, %r718, %r719, %r720, %r721, %r722, %r723, %r724, %r725, %r726, %r727, %r728, %r729, %r730, %r731, %r732, %r733, %r734, %r735, %r736, %r737, %r738, %r739, %r740, %r741, %r742, %r743, %r744, %r745, %r746, %r747, %r748, %r749, %r750, %r751, %r752, %r753, %r754, %r755, %r756, %r757, %r758, %r759, %r760, %r761, %r762, %r763, %r764, %r765, %r766, %r767, %r768, %r769, %r770, %r771, %r772, %r773, %r774, %r775, %r776, %r777, %r778, %r779, %r780, %r781, %r782, %r783, %r784, %r785, %r786, %r787, %r788, %r789, %r790, %r791, %r792, %r793, %r794, %r795, %r796, %r797, %r798, %r799, %r800, %r801, %r802, %r803, %r804, %r805}, [%r806];
	// end inline asm
	// begin inline asm
	tcgen05.wait::ld.sync.aligned;
	// end inline asm
	.loc	1 173 43                        // matmul_persistent_tma_ws.py:173:43
	// begin inline asm
	bar.sync 0x2, 0x80;
	// end inline asm
	// begin inline asm
	@%p24 mbarrier.inval.shared::cta.b64 [%r547];
	// end inline asm
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	add.s64 	%rd57, %rd57, %rd8;
	mov.b32 	%f1, %r549;
	mov.b32 	%f2, %r550;
	mov.b32 	%f3, %r551;
	mov.b32 	%f4, %r552;
	mov.b32 	%f5, %r553;
	mov.b32 	%f6, %r554;
	mov.b32 	%f7, %r555;
	mov.b32 	%f8, %r556;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r812, %f8, %f7;
	cvt.rn.f16x2.f32 	%r813, %f6, %f5;
	cvt.rn.f16x2.f32 	%r814, %f4, %f3;
	cvt.rn.f16x2.f32 	%r815, %f2, %f1;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f9, %r557;
	mov.b32 	%f10, %r558;
	mov.b32 	%f11, %r559;
	mov.b32 	%f12, %r560;
	mov.b32 	%f13, %r561;
	mov.b32 	%f14, %r562;
	mov.b32 	%f15, %r563;
	mov.b32 	%f16, %r564;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r816, %f16, %f15;
	cvt.rn.f16x2.f32 	%r817, %f14, %f13;
	cvt.rn.f16x2.f32 	%r818, %f12, %f11;
	cvt.rn.f16x2.f32 	%r819, %f10, %f9;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f17, %r565;
	mov.b32 	%f18, %r566;
	mov.b32 	%f19, %r567;
	mov.b32 	%f20, %r568;
	mov.b32 	%f21, %r569;
	mov.b32 	%f22, %r570;
	mov.b32 	%f23, %r571;
	mov.b32 	%f24, %r572;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r820, %f24, %f23;
	cvt.rn.f16x2.f32 	%r821, %f22, %f21;
	cvt.rn.f16x2.f32 	%r822, %f20, %f19;
	cvt.rn.f16x2.f32 	%r823, %f18, %f17;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f25, %r573;
	mov.b32 	%f26, %r574;
	mov.b32 	%f27, %r575;
	mov.b32 	%f28, %r576;
	mov.b32 	%f29, %r577;
	mov.b32 	%f30, %r578;
	mov.b32 	%f31, %r579;
	mov.b32 	%f32, %r580;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r824, %f32, %f31;
	cvt.rn.f16x2.f32 	%r825, %f30, %f29;
	cvt.rn.f16x2.f32 	%r826, %f28, %f27;
	cvt.rn.f16x2.f32 	%r827, %f26, %f25;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f33, %r581;
	mov.b32 	%f34, %r582;
	mov.b32 	%f35, %r583;
	mov.b32 	%f36, %r584;
	mov.b32 	%f37, %r585;
	mov.b32 	%f38, %r586;
	mov.b32 	%f39, %r587;
	mov.b32 	%f40, %r588;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r828, %f40, %f39;
	cvt.rn.f16x2.f32 	%r829, %f38, %f37;
	cvt.rn.f16x2.f32 	%r830, %f36, %f35;
	cvt.rn.f16x2.f32 	%r831, %f34, %f33;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f41, %r589;
	mov.b32 	%f42, %r590;
	mov.b32 	%f43, %r591;
	mov.b32 	%f44, %r592;
	mov.b32 	%f45, %r593;
	mov.b32 	%f46, %r594;
	mov.b32 	%f47, %r595;
	mov.b32 	%f48, %r596;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r832, %f48, %f47;
	cvt.rn.f16x2.f32 	%r833, %f46, %f45;
	cvt.rn.f16x2.f32 	%r834, %f44, %f43;
	cvt.rn.f16x2.f32 	%r835, %f42, %f41;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f49, %r597;
	mov.b32 	%f50, %r598;
	mov.b32 	%f51, %r599;
	mov.b32 	%f52, %r600;
	mov.b32 	%f53, %r601;
	mov.b32 	%f54, %r602;
	mov.b32 	%f55, %r603;
	mov.b32 	%f56, %r604;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r836, %f56, %f55;
	cvt.rn.f16x2.f32 	%r837, %f54, %f53;
	cvt.rn.f16x2.f32 	%r838, %f52, %f51;
	cvt.rn.f16x2.f32 	%r839, %f50, %f49;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f57, %r605;
	mov.b32 	%f58, %r606;
	mov.b32 	%f59, %r607;
	mov.b32 	%f60, %r608;
	mov.b32 	%f61, %r609;
	mov.b32 	%f62, %r610;
	mov.b32 	%f63, %r611;
	mov.b32 	%f64, %r612;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r840, %f64, %f63;
	cvt.rn.f16x2.f32 	%r841, %f62, %f61;
	cvt.rn.f16x2.f32 	%r842, %f60, %f59;
	cvt.rn.f16x2.f32 	%r843, %f58, %f57;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f65, %r613;
	mov.b32 	%f66, %r614;
	mov.b32 	%f67, %r615;
	mov.b32 	%f68, %r616;
	mov.b32 	%f69, %r617;
	mov.b32 	%f70, %r618;
	mov.b32 	%f71, %r619;
	mov.b32 	%f72, %r620;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r844, %f72, %f71;
	cvt.rn.f16x2.f32 	%r845, %f70, %f69;
	cvt.rn.f16x2.f32 	%r846, %f68, %f67;
	cvt.rn.f16x2.f32 	%r847, %f66, %f65;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f73, %r621;
	mov.b32 	%f74, %r622;
	mov.b32 	%f75, %r623;
	mov.b32 	%f76, %r624;
	mov.b32 	%f77, %r625;
	mov.b32 	%f78, %r626;
	mov.b32 	%f79, %r627;
	mov.b32 	%f80, %r628;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r848, %f80, %f79;
	cvt.rn.f16x2.f32 	%r849, %f78, %f77;
	cvt.rn.f16x2.f32 	%r850, %f76, %f75;
	cvt.rn.f16x2.f32 	%r851, %f74, %f73;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f81, %r629;
	mov.b32 	%f82, %r630;
	mov.b32 	%f83, %r631;
	mov.b32 	%f84, %r632;
	mov.b32 	%f85, %r633;
	mov.b32 	%f86, %r634;
	mov.b32 	%f87, %r635;
	mov.b32 	%f88, %r636;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r852, %f88, %f87;
	cvt.rn.f16x2.f32 	%r853, %f86, %f85;
	cvt.rn.f16x2.f32 	%r854, %f84, %f83;
	cvt.rn.f16x2.f32 	%r855, %f82, %f81;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f89, %r637;
	mov.b32 	%f90, %r638;
	mov.b32 	%f91, %r639;
	mov.b32 	%f92, %r640;
	mov.b32 	%f93, %r641;
	mov.b32 	%f94, %r642;
	mov.b32 	%f95, %r643;
	mov.b32 	%f96, %r644;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r856, %f96, %f95;
	cvt.rn.f16x2.f32 	%r857, %f94, %f93;
	cvt.rn.f16x2.f32 	%r858, %f92, %f91;
	cvt.rn.f16x2.f32 	%r859, %f90, %f89;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f97, %r645;
	mov.b32 	%f98, %r646;
	mov.b32 	%f99, %r647;
	mov.b32 	%f100, %r648;
	mov.b32 	%f101, %r649;
	mov.b32 	%f102, %r650;
	mov.b32 	%f103, %r651;
	mov.b32 	%f104, %r652;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r860, %f104, %f103;
	cvt.rn.f16x2.f32 	%r861, %f102, %f101;
	cvt.rn.f16x2.f32 	%r862, %f100, %f99;
	cvt.rn.f16x2.f32 	%r863, %f98, %f97;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f105, %r653;
	mov.b32 	%f106, %r654;
	mov.b32 	%f107, %r655;
	mov.b32 	%f108, %r656;
	mov.b32 	%f109, %r657;
	mov.b32 	%f110, %r658;
	mov.b32 	%f111, %r659;
	mov.b32 	%f112, %r660;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r864, %f112, %f111;
	cvt.rn.f16x2.f32 	%r865, %f110, %f109;
	cvt.rn.f16x2.f32 	%r866, %f108, %f107;
	cvt.rn.f16x2.f32 	%r867, %f106, %f105;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f113, %r661;
	mov.b32 	%f114, %r662;
	mov.b32 	%f115, %r663;
	mov.b32 	%f116, %r664;
	mov.b32 	%f117, %r665;
	mov.b32 	%f118, %r666;
	mov.b32 	%f119, %r667;
	mov.b32 	%f120, %r668;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r868, %f120, %f119;
	cvt.rn.f16x2.f32 	%r869, %f118, %f117;
	cvt.rn.f16x2.f32 	%r870, %f116, %f115;
	cvt.rn.f16x2.f32 	%r871, %f114, %f113;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f121, %r669;
	mov.b32 	%f122, %r670;
	mov.b32 	%f123, %r671;
	mov.b32 	%f124, %r672;
	mov.b32 	%f125, %r673;
	mov.b32 	%f126, %r674;
	mov.b32 	%f127, %r675;
	mov.b32 	%f128, %r676;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r872, %f128, %f127;
	cvt.rn.f16x2.f32 	%r873, %f126, %f125;
	cvt.rn.f16x2.f32 	%r874, %f124, %f123;
	cvt.rn.f16x2.f32 	%r875, %f122, %f121;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f129, %r678;
	mov.b32 	%f130, %r679;
	mov.b32 	%f131, %r680;
	mov.b32 	%f132, %r681;
	mov.b32 	%f133, %r682;
	mov.b32 	%f134, %r683;
	mov.b32 	%f135, %r684;
	mov.b32 	%f136, %r685;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r876, %f136, %f135;
	cvt.rn.f16x2.f32 	%r877, %f134, %f133;
	cvt.rn.f16x2.f32 	%r878, %f132, %f131;
	cvt.rn.f16x2.f32 	%r879, %f130, %f129;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f137, %r686;
	mov.b32 	%f138, %r687;
	mov.b32 	%f139, %r688;
	mov.b32 	%f140, %r689;
	mov.b32 	%f141, %r690;
	mov.b32 	%f142, %r691;
	mov.b32 	%f143, %r692;
	mov.b32 	%f144, %r693;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r880, %f144, %f143;
	cvt.rn.f16x2.f32 	%r881, %f142, %f141;
	cvt.rn.f16x2.f32 	%r882, %f140, %f139;
	cvt.rn.f16x2.f32 	%r883, %f138, %f137;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f145, %r694;
	mov.b32 	%f146, %r695;
	mov.b32 	%f147, %r696;
	mov.b32 	%f148, %r697;
	mov.b32 	%f149, %r698;
	mov.b32 	%f150, %r699;
	mov.b32 	%f151, %r700;
	mov.b32 	%f152, %r701;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r884, %f152, %f151;
	cvt.rn.f16x2.f32 	%r885, %f150, %f149;
	cvt.rn.f16x2.f32 	%r886, %f148, %f147;
	cvt.rn.f16x2.f32 	%r887, %f146, %f145;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f153, %r702;
	mov.b32 	%f154, %r703;
	mov.b32 	%f155, %r704;
	mov.b32 	%f156, %r705;
	mov.b32 	%f157, %r706;
	mov.b32 	%f158, %r707;
	mov.b32 	%f159, %r708;
	mov.b32 	%f160, %r709;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r888, %f160, %f159;
	cvt.rn.f16x2.f32 	%r889, %f158, %f157;
	cvt.rn.f16x2.f32 	%r890, %f156, %f155;
	cvt.rn.f16x2.f32 	%r891, %f154, %f153;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f161, %r710;
	mov.b32 	%f162, %r711;
	mov.b32 	%f163, %r712;
	mov.b32 	%f164, %r713;
	mov.b32 	%f165, %r714;
	mov.b32 	%f166, %r715;
	mov.b32 	%f167, %r716;
	mov.b32 	%f168, %r717;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r892, %f168, %f167;
	cvt.rn.f16x2.f32 	%r893, %f166, %f165;
	cvt.rn.f16x2.f32 	%r894, %f164, %f163;
	cvt.rn.f16x2.f32 	%r895, %f162, %f161;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f169, %r718;
	mov.b32 	%f170, %r719;
	mov.b32 	%f171, %r720;
	mov.b32 	%f172, %r721;
	mov.b32 	%f173, %r722;
	mov.b32 	%f174, %r723;
	mov.b32 	%f175, %r724;
	mov.b32 	%f176, %r725;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r896, %f176, %f175;
	cvt.rn.f16x2.f32 	%r897, %f174, %f173;
	cvt.rn.f16x2.f32 	%r898, %f172, %f171;
	cvt.rn.f16x2.f32 	%r899, %f170, %f169;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f177, %r726;
	mov.b32 	%f178, %r727;
	mov.b32 	%f179, %r728;
	mov.b32 	%f180, %r729;
	mov.b32 	%f181, %r730;
	mov.b32 	%f182, %r731;
	mov.b32 	%f183, %r732;
	mov.b32 	%f184, %r733;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r900, %f184, %f183;
	cvt.rn.f16x2.f32 	%r901, %f182, %f181;
	cvt.rn.f16x2.f32 	%r902, %f180, %f179;
	cvt.rn.f16x2.f32 	%r903, %f178, %f177;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f185, %r734;
	mov.b32 	%f186, %r735;
	mov.b32 	%f187, %r736;
	mov.b32 	%f188, %r737;
	mov.b32 	%f189, %r738;
	mov.b32 	%f190, %r739;
	mov.b32 	%f191, %r740;
	mov.b32 	%f192, %r741;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r904, %f192, %f191;
	cvt.rn.f16x2.f32 	%r905, %f190, %f189;
	cvt.rn.f16x2.f32 	%r906, %f188, %f187;
	cvt.rn.f16x2.f32 	%r907, %f186, %f185;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f193, %r742;
	mov.b32 	%f194, %r743;
	mov.b32 	%f195, %r744;
	mov.b32 	%f196, %r745;
	mov.b32 	%f197, %r746;
	mov.b32 	%f198, %r747;
	mov.b32 	%f199, %r748;
	mov.b32 	%f200, %r749;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r908, %f200, %f199;
	cvt.rn.f16x2.f32 	%r909, %f198, %f197;
	cvt.rn.f16x2.f32 	%r910, %f196, %f195;
	cvt.rn.f16x2.f32 	%r911, %f194, %f193;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f201, %r750;
	mov.b32 	%f202, %r751;
	mov.b32 	%f203, %r752;
	mov.b32 	%f204, %r753;
	mov.b32 	%f205, %r754;
	mov.b32 	%f206, %r755;
	mov.b32 	%f207, %r756;
	mov.b32 	%f208, %r757;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r912, %f208, %f207;
	cvt.rn.f16x2.f32 	%r913, %f206, %f205;
	cvt.rn.f16x2.f32 	%r914, %f204, %f203;
	cvt.rn.f16x2.f32 	%r915, %f202, %f201;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f209, %r758;
	mov.b32 	%f210, %r759;
	mov.b32 	%f211, %r760;
	mov.b32 	%f212, %r761;
	mov.b32 	%f213, %r762;
	mov.b32 	%f214, %r763;
	mov.b32 	%f215, %r764;
	mov.b32 	%f216, %r765;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r916, %f216, %f215;
	cvt.rn.f16x2.f32 	%r917, %f214, %f213;
	cvt.rn.f16x2.f32 	%r918, %f212, %f211;
	cvt.rn.f16x2.f32 	%r919, %f210, %f209;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f217, %r766;
	mov.b32 	%f218, %r767;
	mov.b32 	%f219, %r768;
	mov.b32 	%f220, %r769;
	mov.b32 	%f221, %r770;
	mov.b32 	%f222, %r771;
	mov.b32 	%f223, %r772;
	mov.b32 	%f224, %r773;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r920, %f224, %f223;
	cvt.rn.f16x2.f32 	%r921, %f222, %f221;
	cvt.rn.f16x2.f32 	%r922, %f220, %f219;
	cvt.rn.f16x2.f32 	%r923, %f218, %f217;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f225, %r774;
	mov.b32 	%f226, %r775;
	mov.b32 	%f227, %r776;
	mov.b32 	%f228, %r777;
	mov.b32 	%f229, %r778;
	mov.b32 	%f230, %r779;
	mov.b32 	%f231, %r780;
	mov.b32 	%f232, %r781;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r924, %f232, %f231;
	cvt.rn.f16x2.f32 	%r925, %f230, %f229;
	cvt.rn.f16x2.f32 	%r926, %f228, %f227;
	cvt.rn.f16x2.f32 	%r927, %f226, %f225;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f233, %r782;
	mov.b32 	%f234, %r783;
	mov.b32 	%f235, %r784;
	mov.b32 	%f236, %r785;
	mov.b32 	%f237, %r786;
	mov.b32 	%f238, %r787;
	mov.b32 	%f239, %r788;
	mov.b32 	%f240, %r789;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r928, %f240, %f239;
	cvt.rn.f16x2.f32 	%r929, %f238, %f237;
	cvt.rn.f16x2.f32 	%r930, %f236, %f235;
	cvt.rn.f16x2.f32 	%r931, %f234, %f233;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f241, %r790;
	mov.b32 	%f242, %r791;
	mov.b32 	%f243, %r792;
	mov.b32 	%f244, %r793;
	mov.b32 	%f245, %r794;
	mov.b32 	%f246, %r795;
	mov.b32 	%f247, %r796;
	mov.b32 	%f248, %r797;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r932, %f248, %f247;
	cvt.rn.f16x2.f32 	%r933, %f246, %f245;
	cvt.rn.f16x2.f32 	%r934, %f244, %f243;
	cvt.rn.f16x2.f32 	%r935, %f242, %f241;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	mov.b32 	%f249, %r798;
	mov.b32 	%f250, %r799;
	mov.b32 	%f251, %r800;
	mov.b32 	%f252, %r801;
	mov.b32 	%f253, %r802;
	mov.b32 	%f254, %r803;
	mov.b32 	%f255, %r804;
	mov.b32 	%f256, %r805;
	.loc	1 176 27                        // matmul_persistent_tma_ws.py:176:27
	cvt.rn.f16x2.f32 	%r936, %f256, %f255;
	cvt.rn.f16x2.f32 	%r937, %f254, %f253;
	cvt.rn.f16x2.f32 	%r938, %f252, %f251;
	cvt.rn.f16x2.f32 	%r939, %f250, %f249;
	.loc	1 179 56                        // matmul_persistent_tma_ws.py:179:56
	cp.async.bulk.wait_group.read 0;
	st.shared.v4.b32 	[%r30], {%r815, %r814, %r813, %r812};
	st.shared.v4.b32 	[%r31], {%r819, %r818, %r817, %r816};
	st.shared.v4.b32 	[%r32], {%r823, %r822, %r821, %r820};
	st.shared.v4.b32 	[%r33], {%r827, %r826, %r825, %r824};
	st.shared.v4.b32 	[%r34], {%r831, %r830, %r829, %r828};
	st.shared.v4.b32 	[%r35], {%r835, %r834, %r833, %r832};
	st.shared.v4.b32 	[%r36], {%r839, %r838, %r837, %r836};
	st.shared.v4.b32 	[%r37], {%r843, %r842, %r841, %r840};
	st.shared.v4.b32 	[%r30+16384], {%r847, %r846, %r845, %r844};
	st.shared.v4.b32 	[%r38], {%r851, %r850, %r849, %r848};
	st.shared.v4.b32 	[%r39], {%r855, %r854, %r853, %r852};
	st.shared.v4.b32 	[%r40], {%r859, %r858, %r857, %r856};
	st.shared.v4.b32 	[%r41], {%r863, %r862, %r861, %r860};
	st.shared.v4.b32 	[%r42], {%r867, %r866, %r865, %r864};
	st.shared.v4.b32 	[%r43], {%r871, %r870, %r869, %r868};
	st.shared.v4.b32 	[%r44], {%r875, %r874, %r873, %r872};
	st.shared.v4.b32 	[%r30+32768], {%r879, %r878, %r877, %r876};
	st.shared.v4.b32 	[%r45], {%r883, %r882, %r881, %r880};
	st.shared.v4.b32 	[%r46], {%r887, %r886, %r885, %r884};
	st.shared.v4.b32 	[%r47], {%r891, %r890, %r889, %r888};
	st.shared.v4.b32 	[%r48], {%r895, %r894, %r893, %r892};
	st.shared.v4.b32 	[%r49], {%r899, %r898, %r897, %r896};
	st.shared.v4.b32 	[%r50], {%r903, %r902, %r901, %r900};
	st.shared.v4.b32 	[%r51], {%r907, %r906, %r905, %r904};
	st.shared.v4.b32 	[%r30+49152], {%r911, %r910, %r909, %r908};
	st.shared.v4.b32 	[%r52], {%r915, %r914, %r913, %r912};
	st.shared.v4.b32 	[%r53], {%r919, %r918, %r917, %r916};
	st.shared.v4.b32 	[%r54], {%r923, %r922, %r921, %r920};
	st.shared.v4.b32 	[%r55], {%r927, %r926, %r925, %r924};
	st.shared.v4.b32 	[%r56], {%r931, %r930, %r929, %r928};
	st.shared.v4.b32 	[%r57], {%r935, %r934, %r933, %r932};
	st.shared.v4.b32 	[%r58], {%r939, %r938, %r937, %r936};
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	// begin inline asm
	bar.sync 0x2, 0x80;
	// end inline asm
	elect.sync 	%r940|%p58, -1;
	add.s32 	%r941, %r65, -4;
	and.pred  	%p56, %p57, %p58;
	shl.b32 	%r942, %r941, 14;
	add.s32 	%r943, %r82, %r942;
	add.s32 	%r810, %r943, 98304;
	shl.b32 	%r944, %r941, 6;
	add.s32 	%r808, %r944, %r64;
	// begin inline asm
	@%p56 cp.async.bulk.tensor.2d.global.shared::cta.bulk_group [%rd48, {%r808, %r63}], [%r810];
	// end inline asm
	cp.async.bulk.commit_group;
	.loc	1 138 50                        // matmul_persistent_tma_ws.py:138:50
	add.s32 	%r1001, %r1001, %r24;
	setp.lt.s32 	%p59, %r1001, %r22;
	@%p59 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_19;
$L__BB0_10:                             // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_15 Depth 2
	.loc	1 142 26                        // matmul_persistent_tma_ws.py:142:26
	div.s32 	%r464, %r1001, %r25;
	.loc	1 143 33                        // matmul_persistent_tma_ws.py:143:33
	shl.b32 	%r465, %r464, 3;
	.loc	1 144 39                        // matmul_persistent_tma_ws.py:144:39
	sub.s32 	%r466, %r21, %r465;
	.loc	1 144 52                        // matmul_persistent_tma_ws.py:144:52
	min.s32 	%r468, %r466, 8;
	.loc	1 145 38                        // matmul_persistent_tma_ws.py:145:38
	mul.lo.s32 	%r469, %r464, %r25;
	sub.s32 	%r470, %r1001, %r469;
	.loc	1 146 44                        // matmul_persistent_tma_ws.py:146:44
	div.s32 	%r471, %r470, %r468;
	.loc	1 145 58                        // matmul_persistent_tma_ws.py:145:58
	mul.lo.s32 	%r472, %r471, %r468;
	sub.s32 	%r473, %r470, %r472;
	.loc	1 145 31                        // matmul_persistent_tma_ws.py:145:31
	add.s32 	%r474, %r473, %r465;
	.loc	1 155 26                        // matmul_persistent_tma_ws.py:155:26
	shl.b32 	%r63, %r474, 7;
	.loc	1 156 26                        // matmul_persistent_tma_ws.py:156:26
	shl.b32 	%r64, %r471, 8;
	.loc	1 173 43                        // matmul_persistent_tma_ws.py:173:43
	shfl.sync.idx.b32	%r65, %r28, 0, 31, -1;
	shl.b32 	%r475, %r65, 21;
	and.b32  	%r476, %r475, 6291456;
	shl.b32 	%r477, %r65, 6;
	and.b32  	%r478, %r477, -256;
	add.s32 	%r479, %r29, %r476;
	add.s32 	%r677, %r479, %r478;
	mov.pred 	%p22, -1;
	mov.b32 	%r1005, 0;
	// begin inline asm
	@%p22 tcgen05.st.sync.aligned.32x32b.x128.b32 [%r677], {%r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005};
	// end inline asm
	add.s32 	%r806, %r677, 128;
	// begin inline asm
	@%p22 tcgen05.st.sync.aligned.32x32b.x128.b32 [%r806], {%r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005, %r1005};
	// end inline asm
	// begin inline asm
	tcgen05.wait::st.sync.aligned;
	// end inline asm
	// begin inline asm
	bar.sync 0x2, 0x80;
	// end inline asm
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	add.s32 	%r547, %r82, 213088;
	// begin inline asm
	@%p24 mbarrier.init.shared::cta.b64 [%r547], 1;
	// end inline asm
	@%p25 bra 	$L__BB0_18;
// %bb.11:                              // %.lr.ph
                                        //   in Loop: Header=BB0_10 Depth=1
	mul.hi.u64 	%rd18, %rd57, -6148914691236517205;
	shr.u64 	%rd19, %rd18, 1;
	cvt.u32.u64 	%r485, %rd19;
	mad.lo.s64 	%rd21, %rd19, 4294967293, %rd57;
	cvt.u32.u64 	%r69, %rd21;
	setp.ne.s32 	%p27, %r65, 4;
	.loc	1 114 0                         // matmul_persistent_tma_ws.py:114:0
	shl.b32 	%r486, %r69, 3;
	add.s32 	%r488, %r82, %r486;
	add.s32 	%r481, %r488, 212992;
	and.b32  	%r489, %r485, 1;
	neg.s32 	%r482, %r489;
	// begin inline asm
	bar.sync 0x2, 0x80;
	// end inline asm
	// begin inline asm
	{                                                           
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r481], %r482;           
	@!P1 bra.uni waitLoop;                                      
	}                                                           
	
	// end inline asm
	.loc	1 173 43                        // matmul_persistent_tma_ws.py:173:43
	// begin inline asm
	bar.sync 0x2, 0x80;
	// end inline asm
	mov.b32 	%r1005, 0;
	mov.pred 	%p26, 0;
	// begin inline asm
	{                                                           
	@!%p26 bra.uni skipWait;                                      
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r547], %r1005;           
	@!P1 bra.uni waitLoop;                                      
	skipWait:                                                   
	}                                                           
	
	// end inline asm
	@%p27 bra 	$L__BB0_13;
// %bb.12:                              //   in Loop: Header=BB0_10 Depth=1
	.loc	1 114 0                         // matmul_persistent_tma_ws.py:114:0
	shl.b32 	%r498, %r69, 14;
	shl.b32 	%r499, %r69, 15;
	add.s32 	%r501, %r82, %r499;
	add.s32 	%r502, %r82, %r498;
	add.s32 	%r503, %r502, 163840;
	.loc	1 173 43                        // matmul_persistent_tma_ws.py:173:43
	elect.sync 	%r504|%p29, -1;
	shr.u32 	%r505, %r503, 4;
	cvt.u64.u32 	%rd31, %r505;
	and.b64  	%rd32, %rd31, 16383;
	or.b64  	%rd22, %rd32, 4611686293372403712;
	shr.u32 	%r506, %r501, 4;
	cvt.u64.u32 	%rd33, %r506;
	and.b64  	%rd34, %rd33, 16383;
	or.b64  	%rd23, %rd34, 4611686293338849280;
	mov.b32 	%r491, 138477584;
	mov.pred 	%p28, -1;
	// begin inline asm
	@%p29 tcgen05.mma.cta_group::1.kind::f16 [ %r490 + 0 ], %rd22, %rd23, %r491, %p28;
	// end inline asm
	add.s64 	%rd24, %rd32, 4611686293372403714;
	add.s64 	%rd25, %rd34, 4611686293338849408;
	// begin inline asm
	@%p29 tcgen05.mma.cta_group::1.kind::f16 [ %r490 + 0 ], %rd24, %rd25, %r491, %p28;
	// end inline asm
	add.s64 	%rd26, %rd32, 4611686293372403716;
	add.s64 	%rd27, %rd34, 4611686293338849536;
	// begin inline asm
	@%p29 tcgen05.mma.cta_group::1.kind::f16 [ %r490 + 0 ], %rd26, %rd27, %r491, %p28;
	// end inline asm
	add.s64 	%rd28, %rd32, 4611686293372403718;
	add.s64 	%rd29, %rd34, 4611686293338849664;
	// begin inline asm
	@%p29 tcgen05.mma.cta_group::1.kind::f16 [ %r490 + 0 ], %rd28, %rd29, %r491, %p28;
	// end inline asm
	cvt.u64.u32 	%rd30, %r547;
	// begin inline asm
	@%p29 tcgen05.commit.cta_group::1.mbarrier::arrive::one.b64 [%rd30];
	// end inline asm
$L__BB0_13:                             //   in Loop: Header=BB0_10 Depth=1
	.loc	1 0 43                          // matmul_persistent_tma_ws.py:0:43
	setp.lt.u32 	%p38, %r60, 64;
	.loc	1 173 43                        // matmul_persistent_tma_ws.py:173:43
	add.s32 	%r508, %r488, 213056;
	mov.pred 	%p37, -1;
	// begin inline asm
	@%p37 mbarrier.arrive.shared.b64 _, [%r508];
	// end inline asm
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	@%p38 bra 	$L__BB0_18;
// %bb.14:                              // %.peel.next
                                        //   in Loop: Header=BB0_10 Depth=1
	.loc	1 0 26                          // matmul_persistent_tma_ws.py:0:26
	and.b64  	%rd20, %rd19, 1;
	setp.eq.b64 	%p4, %rd20, 1;
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	add.s32 	%r514, %r69, 1;
	setp.gt.u32 	%p39, %r514, 2;
	xor.pred  	%p75, %p39, %p4;
	add.s32 	%r515, %r69, -2;
	selp.b32 	%r1004, %r515, %r514, %p39;
	mov.b32 	%r1005, 0;
	mov.u32 	%r1002, %r61;
	bra.uni 	$L__BB0_15;
$L__BB0_17:                             //   in Loop: Header=BB0_15 Depth=2
	.loc	1 173 43                        // matmul_persistent_tma_ws.py:173:43
	xor.b32  	%r1005, %r1005, 1;
	add.s32 	%r541, %r522, 213056;
	// begin inline asm
	@%p42 mbarrier.arrive.shared.b64 _, [%r541];
	// end inline asm
	.loc	1 160 26                        // matmul_persistent_tma_ws.py:160:26
	add.s32 	%r545, %r1004, 1;
	setp.gt.u32 	%p52, %r545, 2;
	add.s32 	%r546, %r1004, -2;
	selp.b32 	%r1004, %r546, %r545, %p52;
	xor.pred  	%p75, %p75, %p52;
	add.s32 	%r1002, %r1002, -1;
	setp.ne.s32 	%p53, %r1002, 0;
	@%p53 bra 	$L__BB0_15;
	bra.uni 	$L__BB0_18;
$L__BB0_15:                             //   Parent Loop BB0_10 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc	1 114 0                         // matmul_persistent_tma_ws.py:114:0
	shl.b32 	%r520, %r1004, 3;
	add.s32 	%r522, %r82, %r520;
	add.s32 	%r516, %r522, 212992;
	selp.s32 	%r517, -1, 0, %p75;
	// begin inline asm
	bar.sync 0x2, 0x80;
	// end inline asm
	// begin inline asm
	{                                                           
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r516], %r517;           
	@!P1 bra.uni waitLoop;                                      
	}                                                           
	
	// end inline asm
	.loc	1 173 43                        // matmul_persistent_tma_ws.py:173:43
	// begin inline asm
	bar.sync 0x2, 0x80;
	// end inline asm
	mov.pred 	%p42, -1;
	// begin inline asm
	{                                                           
	@!%p42 bra.uni skipWait;                                      
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r547], %r1005;           
	@!P1 bra.uni waitLoop;                                      
	skipWait:                                                   
	}                                                           
	
	// end inline asm
	@%p27 bra 	$L__BB0_17;
// %bb.16:                              //   in Loop: Header=BB0_15 Depth=2
	.loc	1 114 0                         // matmul_persistent_tma_ws.py:114:0
	shl.b32 	%r531, %r1004, 14;
	shl.b32 	%r532, %r1004, 15;
	add.s32 	%r534, %r82, %r532;
	add.s32 	%r535, %r82, %r531;
	add.s32 	%r536, %r535, 163840;
	.loc	1 173 43                        // matmul_persistent_tma_ws.py:173:43
	elect.sync 	%r537|%p43, -1;
	shr.u32 	%r538, %r536, 4;
	cvt.u64.u32 	%rd44, %r538;
	and.b64  	%rd45, %rd44, 16383;
	or.b64  	%rd35, %rd45, 4611686293372403712;
	shr.u32 	%r539, %r534, 4;
	cvt.u64.u32 	%rd46, %r539;
	and.b64  	%rd47, %rd46, 16383;
	or.b64  	%rd36, %rd47, 4611686293338849280;
	mov.b32 	%r524, 138477584;
	// begin inline asm
	@%p43 tcgen05.mma.cta_group::1.kind::f16 [ %r490 + 0 ], %rd35, %rd36, %r524, %p42;
	// end inline asm
	add.s64 	%rd37, %rd45, 4611686293372403714;
	add.s64 	%rd38, %rd47, 4611686293338849408;
	// begin inline asm
	@%p43 tcgen05.mma.cta_group::1.kind::f16 [ %r490 + 0 ], %rd37, %rd38, %r524, %p42;
	// end inline asm
	add.s64 	%rd39, %rd45, 4611686293372403716;
	add.s64 	%rd40, %rd47, 4611686293338849536;
	// begin inline asm
	@%p43 tcgen05.mma.cta_group::1.kind::f16 [ %r490 + 0 ], %rd39, %rd40, %r524, %p42;
	// end inline asm
	add.s64 	%rd41, %rd45, 4611686293372403718;
	add.s64 	%rd42, %rd47, 4611686293338849664;
	// begin inline asm
	@%p43 tcgen05.mma.cta_group::1.kind::f16 [ %r490 + 0 ], %rd41, %rd42, %r524, %p42;
	// end inline asm
	cvt.u64.u32 	%rd43, %r547;
	// begin inline asm
	@%p43 tcgen05.commit.cta_group::1.mbarrier::arrive::one.b64 [%rd43];
	// end inline asm
	bra.uni 	$L__BB0_17;
$L__BB0_19:                             // %._crit_edge26
	.loc	1 138 50                        // matmul_persistent_tma_ws.py:138:50
	cp.async.bulk.wait_group.read 0;
$L__BB0_20:                             // %.loopexit
	.loc	1 138 4                         // matmul_persistent_tma_ws.py:138:4
	// begin inline asm
	@%p8 tcgen05.dealloc.cta_group::1.sync.aligned.b32 %r490, 256;
	// end inline asm
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/hoy/triton-fb/python/gemmbench/impls/matmul_persistent_tma_ws.py"
	.file	2 "/home/hoy/triton-fb/python/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 173                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 109                                 // DW_AT_name
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 101
.b8 114
.b8 115
.b8 105
.b8 115
.b8 116
.b8 101
.b8 110
.b8 116
.b8 95
.b8 116
.b8 109
.b8 97
.b8 95
.b8 119
.b8 115
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 104
.b8 111
.b8 121
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 45
.b8 102
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 47
.b8 103
.b8 101
.b8 109
.b8 109
.b8 98
.b8 101
.b8 110
.b8 99
.b8 104
.b8 47
.b8 105
.b8 109
.b8 112
.b8 108
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x60:0x22 DW_TAG_subprogram
.b8 109                                 // DW_AT_name
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 101
.b8 114
.b8 115
.b8 105
.b8 115
.b8 116
.b8 101
.b8 110
.b8 116
.b8 95
.b8 116
.b8 109
.b8 97
.b8 95
.b8 119
.b8 115
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x82:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 96                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x97:0x18 DW_TAG_inlined_subroutine
.b32 96                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 137                                 // DW_AT_call_line
.b8 54                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
